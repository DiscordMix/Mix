[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/collections/collection.js",
    "content": "const EventEmitter = require(\"events\");\r\nconst _ = require(\"lodash\");\r\n\r\n/**\r\n * @extends EventEmitter\r\n */\r\nexport default class Collection extends EventEmitter {\r\n    /**\r\n     * @param {Array} items\r\n     */\r\n    constructor(items = []) {\r\n        super();\r\n\r\n        /**\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        this.items = items;\r\n    }\r\n\r\n    /**\r\n     * Get an item in this collection by its index\r\n     * @param {Number} index\r\n     * @returns {*}\r\n     */\r\n    at(index) {\r\n        return this.items[index];\r\n    }\r\n\r\n    /**\r\n     * Remove an item from this collection by its index\r\n     * @param {Number} index\r\n     * @returns {Boolean} Whether the item was removed\r\n     */\r\n    removeAt(index) {\r\n        if (this.items[index] !== null && this.items[index] !== undefined) {\r\n            this.emit(\"itemRemoved\", this.items[index]);\r\n            this.items.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Add an item to this collection\r\n     * @param {*} item\r\n     */\r\n    add(item) {\r\n        this.items.push(item);\r\n        this.emit(\"itemAdded\", item);\r\n    }\r\n\r\n    /**\r\n     * Add an item to this collection only if it doesn't already exist\r\n     * @param {*} item\r\n     * @returns {Boolean} Whether the item was added\r\n     */\r\n    addUnique(item) {\r\n        if (!this.contains(item)) {\r\n            this.add(item);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determine whether this collection contains an item\r\n     * @param {*} item\r\n     * @returns {Boolean}\r\n     */\r\n    contains(item) {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            if (this.items[i] === item) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @todo Move this method into the Utils class\r\n     * Find an item in this collection\r\n     * @param {String} path\r\n     * @param {*} value\r\n     */\r\n    find(path, value) {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            if (_.get(this.items[i], path) === value) {\r\n                return this.items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/collections/collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "src/collections/collection.js",
    "static": true,
    "longname": "src/collections/collection.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/collections/collection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "_",
    "memberof": "src/collections/collection.js",
    "static": true,
    "longname": "src/collections/collection.js~_",
    "access": "private",
    "export": false,
    "importPath": "discord-anvil/src/collections/collection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "Collection",
    "memberof": "src/collections/collection.js",
    "static": true,
    "longname": "src/collections/collection.js~Collection",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/collections/collection.js",
    "importStyle": "Collection",
    "description": "",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/collections/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/collection.js~Collection#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "items",
    "memberof": "src/collections/collection.js~Collection",
    "static": false,
    "longname": "src/collections/collection.js~Collection#items",
    "access": "private",
    "description": "",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "at",
    "memberof": "src/collections/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/collection.js~Collection#at",
    "access": "public",
    "description": "Get an item in this collection by its index",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "removeAt",
    "memberof": "src/collections/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/collection.js~Collection#removeAt",
    "access": "public",
    "description": "Remove an item from this collection by its index",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} Whether the item was removed"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the item was removed"
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "add",
    "memberof": "src/collections/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/collection.js~Collection#add",
    "access": "public",
    "description": "Add an item to this collection",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "addUnique",
    "memberof": "src/collections/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/collection.js~Collection#addUnique",
    "access": "public",
    "description": "Add an item to this collection only if it doesn't already exist",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} Whether the item was added"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the item was added"
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "contains",
    "memberof": "src/collections/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/collection.js~Collection#contains",
    "access": "public",
    "description": "Determine whether this collection contains an item",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "find",
    "memberof": "src/collections/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/collection.js~Collection#find",
    "access": "public",
    "description": "",
    "lineNumber": 91,
    "todo": [
      "Move this method into the Utils class\nFind an item in this collection"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/collections/emoji-collection.js",
    "content": "import Collection from \"./collection\";\r\n\r\nconst fs = require(\"fs\");\r\n\r\n/**\r\n * @extends Collection\r\n */\r\nexport default class EmojiCollection extends Collection {\r\n    /**\r\n     * @param {Array<Object>} emojis\r\n     */\r\n    constructor(emojis = []) {\r\n        super(emojis);\r\n    }\r\n\r\n    /**\r\n     * @param {String} name\r\n     * @returns {String}\r\n     */\r\n    get(name) {\r\n        return this.find(\"name\", name).id;\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @returns {EmojiCollection}\r\n     */\r\n    static fromFile(path) {\r\n        if (!fs.existsSync(path)) {\r\n            throw new Error(`[EmojiCollection.fromFile] Path does not exist: ${path}`);\r\n        }\r\n\r\n        return new EmojiCollection(JSON.parse(fs.readFileSync(path).toString()));\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/collections/emoji-collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/collections/emoji-collection.js",
    "static": true,
    "longname": "src/collections/emoji-collection.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/collections/emoji-collection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "class",
    "name": "EmojiCollection",
    "memberof": "src/collections/emoji-collection.js",
    "static": true,
    "longname": "src/collections/emoji-collection.js~EmojiCollection",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/collections/emoji-collection.js",
    "importStyle": "EmojiCollection",
    "description": "",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 63,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/collections/emoji-collection.js~EmojiCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/emoji-collection.js~EmojiCollection#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "emojis",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "get",
    "memberof": "src/collections/emoji-collection.js~EmojiCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collections/emoji-collection.js~EmojiCollection#get",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "fromFile",
    "memberof": "src/collections/emoji-collection.js~EmojiCollection",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/collections/emoji-collection.js~EmojiCollection.fromFile",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmojiCollection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmojiCollection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/commands/access-level-type.js",
    "content": "/**\r\n * @enum {Number}\r\n * @readonly\r\n */\r\nconst AccessLevelType = {\r\n    Guest: 0,\r\n    Member: 1,\r\n    Premium: 2,\r\n    Moderator: 3,\r\n    Admin: 4,\r\n    Owner: 5,\r\n    Developer: 6,\r\n\r\n    /**\r\n     * @param {AccessLevelType} type\r\n     * @returns {String}\r\n     */\r\n    toString(type) {\r\n        switch (type) {\r\n            case this.Guest:\r\n                return \"Guest\";\r\n\r\n            case this.Member:\r\n                return \"Member\";\r\n\r\n            case this.Premium:\r\n                return \"Premium\";\r\n\r\n            case this.Moderator:\r\n                return \"Moderator\";\r\n\r\n            case this.Admin:\r\n                return \"Admin\";\r\n\r\n            case this.Owner:\r\n                return \"Owner\";\r\n\r\n            case this.Developer:\r\n                return \"Developer\";\r\n\r\n            default:\r\n                return \"Unknown\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @param {String} string\r\n     * @returns {AccessLevelType}\r\n     */\r\n    fromString(string) {\r\n        switch (string.toLowerCase()) {\r\n            case \"guest\":\r\n                return this.Guest;\r\n\r\n            case \"member\":\r\n                return this.Member;\r\n\r\n            case \"premium\":\r\n                return this.Premium;\r\n\r\n            case \"moderator\":\r\n                return this.Moderator;\r\n\r\n            case \"admin\":\r\n                return this.Admin;\r\n\r\n            case \"owner\":\r\n                return this.Owner;\r\n\r\n            case \"developer\":\r\n                return this.Developer;\r\n\r\n            default:\r\n                return -1;\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccessLevelType;\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/access-level-type.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "AccessLevelType",
    "memberof": "src/commands/access-level-type.js",
    "static": true,
    "longname": "src/commands/access-level-type.js~AccessLevelType",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/access-level-type.js",
    "importStyle": "AccessLevelType",
    "description": "",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{Number}"
      },
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"Guest\": *, \"Member\": number, \"Premium\": number, \"Moderator\": number, \"Admin\": number, \"Owner\": number, \"Developer\": number, \"toString\": function, \"fromString\": function}"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/commands/command-argument-parser.js",
    "content": "export default class CommandArgumentParser {\r\n    /**\r\n     * @param {String} type\r\n     * @param {String} arg\r\n     * @param {Object} resolvers\r\n     * @returns {*}\r\n     */\r\n    static resolve(type, arg, resolvers) {\r\n        const keys = Object.keys(resolvers);\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (keys[i] === type) {\r\n                return resolvers[keys[i]](arg);\r\n            }\r\n        }\r\n\r\n        throw new Error(`[CommandArgumentParser.resolve] Missing argument resolver: ${type}`);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/command-argument-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "CommandArgumentParser",
    "memberof": "src/commands/command-argument-parser.js",
    "static": true,
    "longname": "src/commands/command-argument-parser.js~CommandArgumentParser",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/command-argument-parser.js",
    "importStyle": "CommandArgumentParser",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "resolve",
    "memberof": "src/commands/command-argument-parser.js~CommandArgumentParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command-argument-parser.js~CommandArgumentParser.resolve",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "arg",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "resolvers",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/commands/command-auth-store.js",
    "content": "import Log from \"../core/log\";\r\n\r\nconst EventEmitter = require(\"events\");\r\n\r\nexport default class CommandAuthStore extends EventEmitter {\r\n    /**\r\n     * @abstract\r\n     * @param {Snowflake} guildId\r\n     * @param {*} identifier\r\n     * @returns {Number}\r\n     */\r\n    getAuthLevel(guildId, identifier) {\r\n        Log.throw(\"[CommandAuthStore.getAuthLevel] Method not implemented\");\r\n    }\r\n\r\n    /**\r\n     * @abstract\r\n     * @param {Snowflake} guildId\r\n     * @param {Array<String>} roles\r\n     * @returns {Number}\r\n     */\r\n    getHighestAuthLevelByRoles(guildId, roles) {\r\n        Log.throw(\"[CommandAuthStore.getHighestAuthLevelByRoles] Method not implemented\");\r\n    }\r\n\r\n    /**\r\n     * @abstract\r\n     * @param {Snowflake} guildId\r\n     * @param {Snowflake} userId\r\n     * @param {Array<String>} roles\r\n     * @returns {Number} The authority of the user\r\n     */\r\n    getAuthority(guildId, userId, roles = [\"@everyone\"]) {\r\n        Log.throw(\"[CommandAuthStore.getAuthority] Method not implemented\");\r\n    }\r\n\r\n    /**\r\n     * Create a default auth store entry\r\n     * @abstract\r\n     * @param {Snowflake} guildId\r\n     * @return {Boolean} Whether the entry was created\r\n     */\r\n    create(guildId) {\r\n        Log.throw(\"[CommandAuthStore.create] Method not implemented\");\r\n    }\r\n\r\n    /**\r\n     * Remove an auth store entry\r\n     * @abstract\r\n     * @param {Snowflake} guildId\r\n     * @return {Boolean} Whether the entry was removed\r\n     */\r\n    remove(guildId) {\r\n        Log.throw(\"[CommandAuthStore.remove] Method not implemented\");\r\n    }\r\n\r\n    /**\r\n     * Determine whether this auth store contains an entry\r\n     * @param {Snowflake} guildId\r\n     * @return {Boolean} Whether the entry exists\r\n     */\r\n    contains(guildId) {\r\n        return this.data[guildId] !== undefined;\r\n    }\r\n\r\n    /**\r\n     * @param {Snowflake} guildId\r\n     * @param {Discord.Message} message\r\n     * @param {Number} authLevel\r\n     * @returns {Boolean}\r\n     */\r\n    hasAuthority(guildId, message, authLevel) {\r\n        return this.getAuthority(guildId, message.author.id, message.member.roles.array().map((role) => role.name)) >= authLevel;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/command-auth-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "src/commands/command-auth-store.js",
    "static": true,
    "longname": "src/commands/command-auth-store.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/commands/command-auth-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "CommandAuthStore",
    "memberof": "src/commands/command-auth-store.js",
    "static": true,
    "longname": "src/commands/command-auth-store.js~CommandAuthStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/command-auth-store.js",
    "importStyle": "CommandAuthStore",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "getAuthLevel",
    "memberof": "src/commands/command-auth-store.js~CommandAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-auth-store.js~CommandAuthStore#getAuthLevel",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getHighestAuthLevelByRoles",
    "memberof": "src/commands/command-auth-store.js~CommandAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-auth-store.js~CommandAuthStore#getHighestAuthLevelByRoles",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "roles",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getAuthority",
    "memberof": "src/commands/command-auth-store.js~CommandAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-auth-store.js~CommandAuthStore#getAuthority",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number} The authority of the user"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "roles",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The authority of the user"
    },
    "abstract": true
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "create",
    "memberof": "src/commands/command-auth-store.js~CommandAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-auth-store.js~CommandAuthStore#create",
    "access": "public",
    "description": "Create a default auth store entry",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the entry was created"
    },
    "abstract": true
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "remove",
    "memberof": "src/commands/command-auth-store.js~CommandAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-auth-store.js~CommandAuthStore#remove",
    "access": "public",
    "description": "Remove an auth store entry",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the entry was removed"
    },
    "abstract": true
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "contains",
    "memberof": "src/commands/command-auth-store.js~CommandAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-auth-store.js~CommandAuthStore#contains",
    "access": "public",
    "description": "Determine whether this auth store contains an entry",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the entry exists"
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "hasAuthority",
    "memberof": "src/commands/command-auth-store.js~CommandAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-auth-store.js~CommandAuthStore#hasAuthority",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Discord.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "authLevel",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/commands/command-execution-context.js",
    "content": "import EditableMessage from \"../message/editable-message\";\r\nimport EmbedBuilder from \"../message/embed-builder\";\r\n\r\nconst Discord = require(\"discord.js\");\r\n\r\nexport default class CommandExecutionContext {\r\n    /**\r\n     * @param {Message} message\r\n     * @param {Array<String>} args\r\n     * @param {Bot} bot\r\n     * @param {Number} auth\r\n     * @param {EmojiCollection} emojis\r\n     */\r\n    constructor(message, args, bot, auth, emojis) {\r\n        /**\r\n         * @type {Message}\r\n         * @readonly\r\n         */\r\n        this.message = message;\r\n\r\n        /**\r\n         * @type {Array<String>}\r\n         * @readonly\r\n         */\r\n        this.arguments = args;\r\n\r\n        /**\r\n         * @type {Bot}\r\n         * @readonly\r\n         */\r\n        this.bot = bot;\r\n\r\n        /**\r\n         * @type {AccessLevelType}\r\n         * @readonly\r\n         */\r\n        this.accessLevel = auth;\r\n\r\n        /**\r\n         * @type {EmojiCollection}\r\n         * @readonly\r\n         */\r\n        this.emojis = emojis;\r\n    }\r\n\r\n    /**\r\n     * @param {*} stream\r\n     * @param {String} name\r\n     * @returns {(Promise<EditableMessage>|Null)}\r\n     */\r\n    async fileStream(stream, name) {\r\n        return await this.message.channel.send(new Discord.Attachment(stream, name));\r\n    }\r\n\r\n    /**\r\n     * @param {(Object|EmbedBuilder)} content\r\n     * @param {Boolean} [autoDelete=false]\r\n     * @returns {(Promise<EditableMessage>|null)}\r\n     */\r\n    async respond(content, autoDelete = false) {\r\n        let embed = null;\r\n\r\n        if (content.text) {\r\n            if (content.text.toString().trim() === \"\" || content.text === undefined || content.text === null) {\r\n                content.text = \":thinking: *Empty response.*\";\r\n            }\r\n        }\r\n\r\n        if (content instanceof EmbedBuilder) {\r\n            embed = content;\r\n        }\r\n        else {\r\n            if (!content.color) {\r\n                content.color = \"GREEN\";\r\n            }\r\n\r\n            if (!content.footer) {\r\n                content.footer = {\r\n                    text: `Requested by ${this.sender.username}`,\r\n                    icon: this.sender.avatarURL\r\n                };\r\n            }\r\n\r\n            embed = EmbedBuilder.fromObject(content);\r\n        }\r\n\r\n        const messageResult = await this.message.channel.send(embed.build()).catch((error) => {\r\n            // TODO: Temporarily disabled due to spamming on unwanted servers.\r\n            // this.privateReply(`Oh noes! For some reason, I was unable to reply to you in that channel. (${error.message})`);\r\n        });\r\n\r\n        if (autoDelete && messageResult) {\r\n            // TODO: Cannot access .length in embeds\r\n            // also static time for images, probably need function\r\n            const timeInSeconds = (4000 + (100 * embed.build() * 1000)) / 1000;\r\n\r\n            messageResult.delete(4000 + (100 * messageResult.content.length * 1000));\r\n\r\n            // TODO\r\n            // this.bot.log.info(messageResult.content.length);\r\n            // this.bot.log.info(`time : ${timeInSeconds}`);\r\n        }\r\n\r\n        return (messageResult !== undefined ? new EditableMessage(messageResult) : null);\r\n    }\r\n\r\n    /**\r\n     * @param {Snowflake} userId\r\n     * @returns {AccessLevelType}\r\n     */\r\n    getAuth(userId) {\r\n        return this.bot.authStore.getAuthority(this.message.guild.id, this.message.guild.member(userId).roles.array().map((role) => role.name), userId);\r\n    }\r\n\r\n    /**\r\n     * @returns {AccessLevelType}\r\n     */\r\n    get auth() {\r\n        return this.getAuth(this.sender.id);\r\n    }\r\n\r\n    /**\r\n     * @param {Object} sections\r\n     * @param {String} color\r\n     * @returns {Promise<EditableMessage>}\r\n     */\r\n    async sections(sections, color = \"GREEN\") {\r\n        return await this.respond(EmbedBuilder.sections(sections, color));\r\n    }\r\n\r\n    /**\r\n     * @param {String} text\r\n     * @returns {Promise<EditableMessage>}\r\n     */\r\n    async ok(text) {\r\n        return await this.respond({\r\n            text: `${text}`\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {String} text\r\n     * @returns {Promise<EditableMessage>}\r\n     */\r\n    async loading(text) {\r\n        return await this.respond({\r\n            text: `${text}`,\r\n            color: \"BLUE\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {String} text\r\n     * @returns {Promise<EditableMessage>}\r\n     */\r\n    async fail(text) {\r\n        return await this.respond({\r\n            text: `:thinking: ${text}`,\r\n            color: \"RED\"\r\n        }, true);\r\n    }\r\n\r\n    /**\r\n     * @returns {User}\r\n     */\r\n    get sender() {\r\n        return this.message.author;\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @returns {(Promise<Message>|null)}\r\n     */\r\n    async reply(message) {\r\n        return await this.message.reply(message);\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     */\r\n    async privateReply(message) {\r\n        return await this.message.author.send(message);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/command-execution-context.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "Discord",
    "memberof": "src/commands/command-execution-context.js",
    "static": true,
    "longname": "src/commands/command-execution-context.js~Discord",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/commands/command-execution-context.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "class",
    "name": "CommandExecutionContext",
    "memberof": "src/commands/command-execution-context.js",
    "static": true,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/command-execution-context.js",
    "importStyle": "CommandExecutionContext",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 84,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Message"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Bot"
        ],
        "spread": false,
        "optional": false,
        "name": "bot",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "auth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EmojiCollection"
        ],
        "spread": false,
        "optional": false,
        "name": "emojis",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "message",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#message",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Message"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "arguments",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#arguments",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<String>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "bot",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#bot",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Bot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "accessLevel",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#accessLevel",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "AccessLevelType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "emojis",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#emojis",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "EmojiCollection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "fileStream",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#fileStream",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{(Promise<EditableMessage>|Null)}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "stream",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EditableMessage>",
        "Null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "respond",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#respond",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{(Promise<EditableMessage>|null)}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "EmbedBuilder"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "autoDelete",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EditableMessage>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "getAuth",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#getAuth",
    "access": "public",
    "description": "",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AccessLevelType}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AccessLevelType"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "get",
    "name": "auth",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#auth",
    "access": "public",
    "description": "",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AccessLevelType}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AccessLevelType"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "sections",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#sections",
    "access": "public",
    "description": "",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<EditableMessage>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "sections",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EditableMessage>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "ok",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#ok",
    "access": "public",
    "description": "",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<EditableMessage>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EditableMessage>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "loading",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#loading",
    "access": "public",
    "description": "",
    "lineNumber": 145,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<EditableMessage>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EditableMessage>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "fail",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#fail",
    "access": "public",
    "description": "",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<EditableMessage>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EditableMessage>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "get",
    "name": "sender",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#sender",
    "access": "public",
    "description": "",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{User}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "User"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "reply",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#reply",
    "access": "public",
    "description": "",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{(Promise<Message>|null)}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Message>",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "privateReply",
    "memberof": "src/commands/command-execution-context.js~CommandExecutionContext",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-execution-context.js~CommandExecutionContext#privateReply",
    "access": "public",
    "description": "",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/commands/command-loader.js",
    "content": "import Command from \"./command\";\r\nimport Log from \"../core/log\";\r\n\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\n\r\nexport default class CommandLoader {\r\n    /**\r\n     * @param {CommandManager} commandManager\r\n     */\r\n    constructor(commandManager) {\r\n        /**\r\n         * @type {CommandManager}\r\n         * @private\r\n         */\r\n        this.commandManager = commandManager;\r\n    }\r\n\r\n    /**\r\n     * Load all the commands from path\r\n     * @returns {Promise}\r\n     */\r\n    async loadAll() {\r\n        return new Promise((resolve) => {\r\n            Log.verbose(`[CommandLoader.loadAll] Loading commands`);\r\n\r\n            this.commandManager.unloadAll();\r\n\r\n            fs.readdir(this.commandManager.path, (error, files) => {\r\n                let loaded = 0;\r\n\r\n                files.forEach((file) => {\r\n                    const moduleName = path.basename(file, \".js\");\r\n\r\n                    if (!file.startsWith(\"@\")) {\r\n                        const modulePath = path.join(this.commandManager.path, moduleName);\r\n\r\n                        let module = require(modulePath);\r\n\r\n                        // Support for ES6-compiled modules\r\n                        if (module.default && typeof module.default === \"object\") {\r\n                            module = module.default;\r\n                        }\r\n\r\n                        // Validate the command before registering it\r\n                        if (Command.validate(module)) {\r\n                            this.commandManager.register(new Command(module));\r\n                            loaded++;\r\n                        }\r\n                        else {\r\n                            Log.warn(`[CommandLoader.loadAll] Skipping invalid command: ${moduleName}`);\r\n                        }\r\n                    }\r\n                    else {\r\n                        Log.verbose(`[CommandLoader.loadAll] Skipping command: ${moduleName}`);\r\n                    }\r\n                });\r\n\r\n                Log.success(`[CommandLoader.loadAll] Loaded a total of ${loaded} command(s)`);\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    load(pth) {\r\n        // TODO\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/command-loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/commands/command-loader.js",
    "static": true,
    "longname": "src/commands/command-loader.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/commands/command-loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "path",
    "memberof": "src/commands/command-loader.js",
    "static": true,
    "longname": "src/commands/command-loader.js~path",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/commands/command-loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "class",
    "name": "CommandLoader",
    "memberof": "src/commands/command-loader.js",
    "static": true,
    "longname": "src/commands/command-loader.js~CommandLoader",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/command-loader.js",
    "importStyle": "CommandLoader",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 105,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/commands/command-loader.js~CommandLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-loader.js~CommandLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "CommandManager"
        ],
        "spread": false,
        "optional": false,
        "name": "commandManager",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "commandManager",
    "memberof": "src/commands/command-loader.js~CommandLoader",
    "static": false,
    "longname": "src/commands/command-loader.js~CommandLoader#commandManager",
    "access": "private",
    "description": "",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "CommandManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "loadAll",
    "memberof": "src/commands/command-loader.js~CommandLoader",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-loader.js~CommandLoader#loadAll",
    "access": "public",
    "description": "Load all the commands from path",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "load",
    "memberof": "src/commands/command-loader.js~CommandLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-loader.js~CommandLoader#load",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [
      {
        "name": "pth",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/commands/command-manager.js",
    "content": "import CommandExecutedEvent from \"../events/command-executed-event\";\r\nimport Log from \"../core/log\";\r\nimport Permission from \"../core/permission\";\r\nimport ChatEnvironment from \"../core/chat-environment\";\r\n\r\nconst Typer = require(\"@raxor1234/typer/typer\");\r\n// import Collection from \"../core/collection\";\r\n\r\nexport default class CommandManager /* extends Collection */ {\r\n    /**\r\n     * @param {Bot} bot\r\n     * @param {String} path\r\n     * @param {CommandAuthStore} authStore\r\n     * @param {Object} argumentTypes\r\n     */\r\n    constructor(bot, path, authStore, argumentTypes) {\r\n        /**\r\n         * @type {Bot}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.bot = bot;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.path = path;\r\n\r\n        /**\r\n         * @type {CommandAuthStore}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.authStore = authStore;\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @readonly\r\n         */\r\n        this.argumentTypes = argumentTypes;\r\n\r\n        /**\r\n         * @type {Array<Command>}\r\n         * @private\r\n         */\r\n        this.commands = [];\r\n    }\r\n\r\n    /**\r\n     * @param {Command} command\r\n     */\r\n    register(command) {\r\n        this.commands.push(command);\r\n    }\r\n\r\n    /**\r\n     * @param {String} commandBase\r\n     * @returns {Boolean}\r\n     */\r\n    removeByBase(commandBase) {\r\n        return this.remove(this.getByName(commandBase));\r\n    }\r\n\r\n    /**\r\n     * @param {Command} command\r\n     * @returns {Boolean}\r\n     */\r\n    remove(command) {\r\n        return this.removeAt(this.commands.indexOf(command));\r\n    }\r\n\r\n    /**\r\n     * @param {Number} index\r\n     * @returns {Boolean}\r\n     */\r\n    removeAt(index) {\r\n        if (this.commands[index]) {\r\n            this.commands.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param {String} commandBase\r\n     * @returns {Boolean}\r\n     */\r\n    contains(commandBase) {\r\n        return this.getByName(commandBase) !== null;\r\n    }\r\n\r\n    /**\r\n     * @param {Array<Command>} commands\r\n     */\r\n    registerMultiple(commands) {\r\n        for (let i = 0; i < commands.length; i++) {\r\n            this.register(commands[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {String} commandBase\r\n     * @returns {Boolean}\r\n     */\r\n    isRegistered(commandBase) {\r\n        return this.getByName(commandBase) != null;\r\n    }\r\n\r\n    /**\r\n     * @param {String} name\r\n     * @returns {(Command|Null)}\r\n     */\r\n    getByName(name) {\r\n        for (let i = 0; i < this.commands.length; i++) {\r\n            if (this.commands[i].name === name || this.commands[i].aliases.includes(name)) {\r\n                return this.commands[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} rules\r\n     * @param {Array<String>} args\r\n     * @returns {Object} The assembled arguments\r\n     */\r\n    assembleArguments(rules, args) {\r\n        const result = {};\r\n\r\n        if (rules.length !== args.length) {\r\n            Log.debug(\"AssembleArguments: Not same length\");\r\n        }\r\n\r\n        for (let i = 0; i < rules.length; i++) {\r\n            result[rules[i]] = (isNaN(args[i]) ? args[i] : parseInt(args[i]));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {ChatEnvironment} environment\r\n     * @param {String} type\r\n     * @returns {Boolean}\r\n     */\r\n    static validateChannelTypeEnv(environment, type) {\r\n        if (environment === ChatEnvironment.Anywhere) {\r\n            return true;\r\n        }\r\n        else if (environment === ChatEnvironment.Private && type === \"dm\") {\r\n            return true;\r\n        }\r\n        else if (environment === ChatEnvironment.Guild && type === \"text\") {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param {ChatEnvironment|Array<ChatEnvironment>} environment\r\n     * @param {String} channelType\r\n     * @returns {Boolean}\r\n     */\r\n    static validateEnvironment(environment, channelType) {\r\n        if (Array.isArray(environment)) {\r\n            for (let i = 0; i < environment.length; i++) {\r\n                if (CommandManager.validateChannelTypeEnv(environment, channelType)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return CommandManager.validateChannelTypeEnv(environment, channelType);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param {CommandExecutionContext} context\r\n     * @param {Command} command The command to handle\r\n     * @returns {Promise<Boolean>} Whether the command was successfully executed\r\n     */\r\n    async handle(context, command) {\r\n        if (!CommandManager.validateEnvironment(command.environment, context.message.channel.type)) {\r\n            context.message.channel.send(\"That command may not be used here. Sorry!\");\r\n        }\r\n        else if (!command.isEnabled) {\r\n            context.fail(\"That command is disabled and may not be used.\");\r\n        }\r\n        // TODO: New AuthStore system\r\n        /* else if (!this.authStore.hasAuthority(context.message.guild.id, context.message, command.auth)) {\r\n            const minAuthority = AccessLevelType.toString(command.auth);\r\n\r\n            context.fail(`You don't have the authority to use that command. You must be at least a(n) **${minAuthority}**.`);\r\n        } */\r\n        else if (context.arguments.length > command.maxArguments) {\r\n            if (command.maxArguments > 0) {\r\n                context.fail(`That command only accepts up to **${command.maxArguments}** arguments.`);\r\n            }\r\n            else {\r\n                context.fail(`That command does not accept any arguments.`);\r\n            }\r\n        }\r\n        else if (command.canExecute !== null && !command.canExecute(context)) {\r\n            context.fail(\"That command cannot be executed right now.\");\r\n        }\r\n        else if (!Typer.validate(command.args, this.assembleArguments(Object.keys(command.args), context.arguments), this.argumentTypes)) {\r\n            context.fail(\"Invalid argument usage. Please use the `usage` command.\");\r\n        }\r\n        else if (command.permissions.length > 0 && !context.message.guild.me.hasPermission(command.permissions.map((permissionObj) => permissionObj.permission))) {\r\n            const permissions = command.permissions.map((permission) => `\\`${permission.name}\\``).join(\", \");\r\n\r\n            context.fail(`I need the following permission(s) to execute that command: ${permissions}`);\r\n        }\r\n        else {\r\n            try {\r\n                const result = command.executed(context);\r\n\r\n                context.bot.emit(\"commandExecuted\", new CommandExecutedEvent(command, context));\r\n\r\n                return result;\r\n            }\r\n            catch (error) {\r\n                // TODO: Include stack trace\r\n                Log.error(`There was an error while executing the ${command.name} command: ${error.message}`);\r\n                context.fail(`There was an error executing that command. (${error.message})`);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Unload all commands\r\n     */\r\n    unloadAll() {\r\n        if (this.commands.length > 0) {\r\n            const count = this.commands.length;\r\n            this.commands = [];\r\n            Log.success(`[CommandManager.unloadAll] Unloaded ${count} command(s)`);\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/command-manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "Typer",
    "memberof": "src/commands/command-manager.js",
    "static": true,
    "longname": "src/commands/command-manager.js~Typer",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/commands/command-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "class",
    "name": "CommandManager",
    "memberof": "src/commands/command-manager.js",
    "static": true,
    "longname": "src/commands/command-manager.js~CommandManager",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/command-manager.js",
    "importStyle": "CommandManager",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 112,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Bot"
        ],
        "spread": false,
        "optional": false,
        "name": "bot",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CommandAuthStore"
        ],
        "spread": false,
        "optional": false,
        "name": "authStore",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "argumentTypes",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "bot",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#bot",
    "access": "private",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Bot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "path",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#path",
    "access": "private",
    "description": "",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "authStore",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#authStore",
    "access": "private",
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "CommandAuthStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "argumentTypes",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#argumentTypes",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "commands",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#commands",
    "access": "private",
    "description": "",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Array<Command>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "register",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#register",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Command"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "removeByBase",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#removeByBase",
    "access": "public",
    "description": "",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "commandBase",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "remove",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#remove",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Command"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "removeAt",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#removeAt",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "contains",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#contains",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "commandBase",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "registerMultiple",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#registerMultiple",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Command>"
        ],
        "spread": false,
        "optional": false,
        "name": "commands",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "isRegistered",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#isRegistered",
    "access": "public",
    "description": "",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "commandBase",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "getByName",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#getByName",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{(Command|Null)}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Command",
        "Null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "assembleArguments",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#assembleArguments",
    "access": "public",
    "description": "",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} The assembled arguments"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rules",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The assembled arguments"
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "validateChannelTypeEnv",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command-manager.js~CommandManager.validateChannelTypeEnv",
    "access": "private",
    "description": "",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ChatEnvironment"
        ],
        "spread": false,
        "optional": false,
        "name": "environment",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "validateEnvironment",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command-manager.js~CommandManager.validateEnvironment",
    "access": "public",
    "description": "",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ChatEnvironment",
          "Array<ChatEnvironment>"
        ],
        "spread": false,
        "optional": false,
        "name": "environment",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "channelType",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "handle",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#handle",
    "access": "public",
    "description": "",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Boolean>} Whether the command was successfully executed"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "CommandExecutionContext"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Command"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "The command to handle"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Boolean>"
      ],
      "spread": false,
      "description": "Whether the command was successfully executed"
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "unloadAll",
    "memberof": "src/commands/command-manager.js~CommandManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command-manager.js~CommandManager#unloadAll",
    "access": "public",
    "description": "Unload all commands",
    "lineNumber": 244,
    "params": [],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/commands/command-parser.js",
    "content": "export default class CommandParser {\r\n    /**\r\n     * @param {String} commandString\r\n     * @param {CommandManager} manager\r\n     * @param {String} trigger\r\n     * @returns {*}\r\n     */\r\n    static parse(commandString, manager, trigger) {\r\n        if (this.isValid(commandString, manager, trigger)) {\r\n            return manager.getByName(this.getCommandBase(commandString, trigger));\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param {String} commandString\r\n     * @param {CommandManager} manager\r\n     * @param {String} trigger\r\n     * @returns {Boolean}\r\n     */\r\n    static isValid(commandString, manager, trigger) {\r\n        if (commandString.startsWith(trigger)) {\r\n            return manager.isRegistered(this.getCommandBase(commandString, trigger));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param {String} commandString\r\n     * @param {String} trigger\r\n     * @returns {*}\r\n     */\r\n    static getCommandBase(commandString, trigger) {\r\n        const regexResult = new RegExp(`^${trigger}([a-zA-Z]+)`).exec(commandString);\r\n\r\n        if (regexResult) {\r\n            return regexResult[1];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} commandString\r\n     * @returns {Array<String>}\r\n     */\r\n    static getArguments(commandString) {\r\n        const expression = / (```((?!```).)*```|\"[^\"]+\"|'[^']+'|`[^`]+`|[^ ]+)/g;\r\n        const argCleanExpression = /(```|`|'|\"|)(.+)\\1/;\r\n        const result = [];\r\n\r\n        let match = expression.exec(commandString);\r\n\r\n        while (match != null) {\r\n            result.push(argCleanExpression.exec(match[1])[2]);\r\n            match = expression.exec(commandString);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // TODO: Also take in arg schema to avoid matching accidental args.\r\n    /**\r\n     * @param {Array<String>} args\r\n     * @param {Object} types\r\n     * @param {Object} resolvers\r\n     * @returns {Array<String>} The resolved arguments\r\n     */\r\n    static resolveArguments(args, types, resolvers) {\r\n        const result = args;\r\n        const typeKeys = Object.keys(types);\r\n\r\n        for (let argIdx = 0; argIdx < result.length; argIdx++) {\r\n            for (let typeIdx = 0; typeIdx < typeKeys.length; typeIdx++) {\r\n                let match = false;\r\n\r\n                if (typeof types[typeKeys[typeIdx]] === \"function\") {\r\n                    match = types[typeKeys[typeIdx]](args[argIdx]);\r\n                }\r\n                else if (types[typeKeys[typeIdx]] instanceof RegExp) {\r\n                    match = types[typeKeys[typeIdx]].test(args[argIdx]);\r\n                }\r\n\r\n                if (match) {\r\n                    if (typeof resolvers[typeKeys[typeIdx]] === \"function\") {\r\n                        result[argIdx] = resolvers[typeKeys[typeIdx]](result[argIdx]);\r\n                    }\r\n                    // TODO: Issue further testing, there's a chance this is a bug.\r\n                    /* else {\r\n                        Log.error(`[CommandParser.resolveArguments] Expecting function but got '${typeof resolvers[typeKeys[typeIdx]]}'.`);\r\n                    } */\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/command-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "class",
    "name": "CommandParser",
    "memberof": "src/commands/command-parser.js",
    "static": true,
    "longname": "src/commands/command-parser.js~CommandParser",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/command-parser.js",
    "importStyle": "CommandParser",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "parse",
    "memberof": "src/commands/command-parser.js~CommandParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command-parser.js~CommandParser.parse",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "commandString",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CommandManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "trigger",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "isValid",
    "memberof": "src/commands/command-parser.js~CommandParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command-parser.js~CommandParser.isValid",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "commandString",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CommandManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "trigger",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "getCommandBase",
    "memberof": "src/commands/command-parser.js~CommandParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command-parser.js~CommandParser.getCommandBase",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "commandString",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "trigger",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "getArguments",
    "memberof": "src/commands/command-parser.js~CommandParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command-parser.js~CommandParser.getArguments",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<String>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "commandString",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<String>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "resolveArguments",
    "memberof": "src/commands/command-parser.js~CommandParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command-parser.js~CommandParser.resolveArguments",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<String>} The resolved arguments"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "resolvers",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<String>"
      ],
      "spread": false,
      "description": "The resolved arguments"
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "src/commands/command.js",
    "content": "import ChatEnvironment from \"../core/chat-environment\";\r\n\r\nconst Typer = require(\"@raxor1234/typer/typer\");\r\n\r\nexport default class Command {\r\n    /**\r\n     * @param {Object} data\r\n     */\r\n    constructor(data) {\r\n        // Setup the command from the provided object\r\n        this.setup(data);\r\n    }\r\n\r\n    /**\r\n     * @todo [CRITICAL] Reflect default data changes throughout project\r\n     * Setup the command from an object\r\n     * @param {Object} data\r\n     */\r\n    setup(data) {\r\n        /**\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.name = data.meta.name;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.description = data.meta.desc;\r\n\r\n        /**\r\n         * @type {Array<String>}\r\n         * @readonly\r\n         */\r\n        this.aliases = data.meta.aliases ? data.meta.aliases : [];\r\n\r\n        /**\r\n         * @type {Function}\r\n         * @readonly\r\n         */\r\n        this.executed = data.executed;\r\n\r\n        /**\r\n         * @type {Function}\r\n         * @readonly\r\n         */\r\n        this.canExecute = data.canExecute ? data.canExecute : null;\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @readonly\r\n         */\r\n        this.args = data.meta.args ? data.meta.args : {};\r\n\r\n        /**\r\n         * @type {Boolean}\r\n         * @readonly\r\n         */\r\n        this.isEnabled = data.meta.enabled !== undefined ? data.meta.enabled : true;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @readonly\r\n         */\r\n        this.cooldown = data.restrict.cooldown ? data.restrict.cooldown : 0;\r\n\r\n        /**\r\n         * @type {Array<Number>}\r\n         */\r\n        this.permissions = data.restrict.permissions ? data.restrict.permissions : [];\r\n\r\n        /**\r\n         * @type {ChatEnvironment|Array<ChatEnvironment>}\r\n         * @readonly\r\n         */\r\n        this.environment = data.restrict.env !== undefined ? data.restrict.env : ChatEnvironment.Anywhere;\r\n\r\n        // TODO: Default auth level to 'default'\r\n        /**\r\n         * @type {AccessLevelType}\r\n         * @readonly\r\n         */\r\n        this.auth = data.restrict.auth;\r\n    }\r\n\r\n    /**\r\n     * @return {Number} The maximum amount of arguments that this command can accept\r\n     */\r\n    get maxArguments() {\r\n        const keys = Object.keys(this.args);\r\n\r\n        let result = 0;\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (this.args[keys[i]].startsWith(\"!\")) {\r\n                result++;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Validate a command module\r\n     * @param {Object} data The module to validate\r\n     * @return {Boolean} Whether the module is valid\r\n     */\r\n    static validate(data) {\r\n        const methods = Typer.validate({\r\n            executed: \"!function\",\r\n            meta: \"!object\",\r\n            canExecute: \"function\",\r\n            restrict: \"object\"\r\n        }, data);\r\n\r\n        const meta = Typer.validate({\r\n            name: \"!string\",\r\n            desc: \"!string\",\r\n            args: \"object\",\r\n            aliases: \":array\",\r\n            isEnabled: \"boolean\",\r\n        }, data.meta, {\r\n            array: (val) => val instanceof Array\r\n        });\r\n\r\n        const restrict = Typer.validate({\r\n            auth: \"number\",\r\n            permissions: \":array\",\r\n            env: \"number\"\r\n        }, data.restrict, {\r\n            array: (val) => val instanceof Array\r\n        });\r\n\r\n        return (methods && meta && restrict);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/command.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "Typer",
    "memberof": "src/commands/command.js",
    "static": true,
    "longname": "src/commands/command.js~Typer",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/commands/command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "class",
    "name": "Command",
    "memberof": "src/commands/command.js",
    "static": true,
    "longname": "src/commands/command.js~Command",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/command.js",
    "importStyle": "Command",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 142,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command.js~Command#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "setup",
    "memberof": "src/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command.js~Command#setup",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "todo": [
      "[CRITICAL] Reflect default data changes throughout project\nSetup the command from an object"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "name",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#name",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "description",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#description",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "aliases",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#aliases",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<String>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "executed",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#executed",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "canExecute",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#canExecute",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "args",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#args",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "isEnabled",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#isEnabled",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "cooldown",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#cooldown",
    "access": "public",
    "description": "",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "permissions",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#permissions",
    "access": "public",
    "description": "",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Array<Number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "environment",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#environment",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ChatEnvironment",
        "Array<ChatEnvironment>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "auth",
    "memberof": "src/commands/command.js~Command",
    "static": false,
    "longname": "src/commands/command.js~Command#auth",
    "access": "public",
    "description": "",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "AccessLevelType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "get",
    "name": "maxArguments",
    "memberof": "src/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/command.js~Command#maxArguments",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The maximum amount of arguments that this command can accept"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "validate",
    "memberof": "src/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/commands/command.js~Command.validate",
    "access": "public",
    "description": "Validate a command module",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The module to validate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the module is valid"
    }
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "src/commands/json-auth-store.js",
    "content": "import Utils from \"../core/utils\";\r\nimport ObjectAuthStore from \"./object-auth-store\";\r\nimport Log from \"../core/log\";\r\n\r\nconst fs = require(\"fs\");\r\n\r\nexport default class JsonAuthStore extends ObjectAuthStore {\r\n    /**\r\n     * @param {String} schemaPath\r\n     * @param {String} storePath\r\n     */\r\n    constructor(schemaPath, storePath) {\r\n        super(null, null);\r\n\r\n        /**\r\n         * The path of the schema file\r\n         * @type {String}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.schemaPath = schemaPath;\r\n\r\n        /**\r\n         * The path of the store file\r\n         * @type {String}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.storePath = storePath;\r\n\r\n        // Initially load the data\r\n        this.reload();\r\n\r\n        // Automatically save the currently loaded data when a guild is created\r\n        this.on(\"guildCreated\", () => {\r\n            this.save();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @return {Promise}\r\n     */\r\n    async reload() {\r\n        if (!this.exists) {\r\n            this.data = {};\r\n            await Utils.writeJson(this.storePath, this.data);\r\n            this.schema\r\n        }\r\n        else {\r\n            this.data = await Utils.readJson(this.storePath);\r\n        }\r\n\r\n        if (!fs.existsSync(this.schemaPath)) {\r\n            Log.throw(`[JsonAuthStore] Schema file path does not exist: ${this.schemaPath}`);\r\n        }\r\n\r\n        this.schema = await Utils.readJson(this.schemaPath);\r\n    }\r\n\r\n    /**\r\n     * Save the currently loaded data into the store file\r\n     * @return {Promise}\r\n     */\r\n    async save() {\r\n        await Utils.writeJson(this.storePath, this.data);\r\n    }\r\n\r\n    /**\r\n     * Determine whether the store file exists\r\n     * @return {Boolean} Whether the store file exists\r\n     */\r\n    get exists() {\r\n        return fs.existsSync(this.storePath) && fs.existsSync(this.schemaPath);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/json-auth-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/commands/json-auth-store.js",
    "static": true,
    "longname": "src/commands/json-auth-store.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/commands/json-auth-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "class",
    "name": "JsonAuthStore",
    "memberof": "src/commands/json-auth-store.js",
    "static": true,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/json-auth-store.js",
    "importStyle": "JsonAuthStore",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/commands/object-auth-store.js~ObjectAuthStore"
    ]
  },
  {
    "__docId__": 160,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/commands/json-auth-store.js~JsonAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "schemaPath",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "storePath",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "schemaPath",
    "memberof": "src/commands/json-auth-store.js~JsonAuthStore",
    "static": false,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore#schemaPath",
    "access": "private",
    "description": "The path of the schema file",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "storePath",
    "memberof": "src/commands/json-auth-store.js~JsonAuthStore",
    "static": false,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore#storePath",
    "access": "private",
    "description": "The path of the store file",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "reload",
    "memberof": "src/commands/json-auth-store.js~JsonAuthStore",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore#reload",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "data",
    "memberof": "src/commands/json-auth-store.js~JsonAuthStore",
    "static": false,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore#data",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "schema",
    "memberof": "src/commands/json-auth-store.js~JsonAuthStore",
    "static": false,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore#schema",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "save",
    "memberof": "src/commands/json-auth-store.js~JsonAuthStore",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore#save",
    "access": "public",
    "description": "Save the currently loaded data into the store file",
    "lineNumber": 64,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 168,
    "kind": "get",
    "name": "exists",
    "memberof": "src/commands/json-auth-store.js~JsonAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/json-auth-store.js~JsonAuthStore#exists",
    "access": "public",
    "description": "Determine whether the store file exists",
    "lineNumber": 72,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the store file exists"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "src/commands/object-auth-store.js",
    "content": "import CommandAuthStore from \"./command-auth-store\";\r\nimport Log from \"../core/log\";\r\n\r\nconst Typer = require(\"@raxor1234/typer\");\r\n\r\nexport default class ObjectAuthStore extends CommandAuthStore {\r\n    /**\r\n     * @param {Object} schema\r\n     * @param {Object} data\r\n     */\r\n    constructor(schema, data) {\r\n        super();\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @protected\r\n         */\r\n        this.schema = schema;\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @protected\r\n         */\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * @param {Snowflake} guildId\r\n     * @param {*} identifier\r\n     * @return {Number}\r\n     */\r\n    getAuthLevel(guildId, identifier) {\r\n        const authLevels = this.data[guildId];\r\n\r\n        for (let i = 0; i < authLevels.length; i++) {\r\n            if (authLevels[i].includes(identifier)) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param {Snowflake} guildId\r\n     * @param {Array<String>} roles\r\n     * @return {Number}\r\n     */\r\n    getHighestAuthLevelByRoles(guildId, roles) {\r\n        let highest = 0;\r\n\r\n        for (let i = 0; i < roles.length; i++) {\r\n            const authLevel = this.getAuthLevel(guildId, roles[i]);\r\n\r\n            if (authLevel > highest) {\r\n                highest = authLevel;\r\n            }\r\n        }\r\n\r\n        return highest;\r\n    }\r\n\r\n    /**\r\n     * @param {Snowflake} guildId\r\n     * @param {Snowflake} userId\r\n     * @param {Array<String>} roles\r\n     * @return {Number} The authority of the user\r\n     */\r\n    getAuthority(guildId, userId, roles = [\"@everyone\"]) {\r\n        const byRoles = this.getHighestAuthLevelByRoles(guildId, roles);\r\n        const byId = this.getAuthLevel(guildId, userId);\r\n\r\n        if (byRoles > byId) {\r\n            return byRoles;\r\n        }\r\n\r\n        return byId;\r\n    }\r\n\r\n    /**\r\n     * Create a default auth store entry\r\n     * @param {Snowflake} guildId\r\n     * @return {Boolean} Whether the entry was created\r\n     */\r\n    create(guildId) {\r\n        if (!this.contains(guildId)) {\r\n            const schemaKeys = Object.keys(this.schema);\r\n            const entry = [];\r\n\r\n            let seenDefault = false;\r\n\r\n            for (let i = 0; i < schemaKeys.length; i++) {\r\n                const authLevel = this.schema[schemaKeys[i]];\r\n\r\n                if (schemaKeys[i].toLowerCase() === \"default\") {\r\n                    if (seenDefault) {\r\n                        Log.throw(\"[ObjectAuthStore] Auth schema may not contain more than one default auth level\");\r\n                    }\r\n\r\n                    const validDefault = Typer.validate({\r\n                        rank: \"!number\"\r\n                    }, authLevel);\r\n\r\n                    if (!validDefault) {\r\n                        Log.throw(\"[ObjectAuthStore] Unable to create default auth store entry: Invalid default auth level\");\r\n                    }\r\n\r\n                    seenDefault = true;\r\n                }\r\n\r\n                entry[authLevel.rank] = [];\r\n            }\r\n\r\n            if (!seenDefault) {\r\n                Log.throw(\"[ObjectAuthStore] Auth schema does not contain a default auth level\");\r\n            }\r\n\r\n            this.data[guildId] = entry;\r\n            this.emit(\"guildCreated\", guildId);\r\n\r\n            return true;\r\n        }\r\n\r\n        Log.error(`[ObjectAuthStore.create] Trying to create an already existing entry: ${guildId}`);\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove an auth store entry\r\n     * @param {Snowflake} guildId\r\n     * @return {Boolean} Whether the entry was removed\r\n     */\r\n    remove(guildId) {\r\n        Log.throw(\"[ObjectAuthStore.remove] Method not implemented\");\r\n    }\r\n\r\n    /**\r\n     * Determine whether this auth store contains an entry\r\n     * @param {Snowflake} guildId\r\n     * @return {Boolean} Whether the entry exists\r\n     */\r\n    contains(guildId) {\r\n        return Object.keys(this.data).includes(guildId);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/commands/object-auth-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "Typer",
    "memberof": "src/commands/object-auth-store.js",
    "static": true,
    "longname": "src/commands/object-auth-store.js~Typer",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/commands/object-auth-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "class",
    "name": "ObjectAuthStore",
    "memberof": "src/commands/object-auth-store.js",
    "static": true,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/commands/object-auth-store.js",
    "importStyle": "ObjectAuthStore",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/commands/command-auth-store.js~CommandAuthStore"
    ]
  },
  {
    "__docId__": 172,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "schema",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#schema",
    "access": "protected",
    "description": "",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "data",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#data",
    "access": "protected",
    "description": "",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "getAuthLevel",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#getAuthLevel",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "getHighestAuthLevelByRoles",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#getHighestAuthLevelByRoles",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "roles",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "getAuthority",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#getAuthority",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "roles",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The authority of the user"
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "create",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#create",
    "access": "public",
    "description": "Create a default auth store entry",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the entry was created"
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "remove",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#remove",
    "access": "public",
    "description": "Remove an auth store entry",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the entry was removed"
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "contains",
    "memberof": "src/commands/object-auth-store.js~ObjectAuthStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/commands/object-auth-store.js~ObjectAuthStore#contains",
    "access": "public",
    "description": "Determine whether this auth store contains an entry",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the entry exists"
    }
  },
  {
    "__docId__": 181,
    "kind": "file",
    "name": "src/console/console-command.js",
    "content": "import Log from '../core/log';\r\n\r\nconst parseArgs = require(\"minimist\");\r\n\r\nexport default class ConsoleCommand {\r\n    /**\r\n     * @param {String} base\r\n     * @param {Object} args\r\n     */\r\n    constructor(base, args) {\r\n        /**\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.base = base;\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @readonly\r\n         */\r\n        this.args = args;\r\n    }\r\n\r\n    // TODO\r\n    /**\r\n     * @param {String} consoleCommandString\r\n     * @returns {ConsoleCommand}\r\n     */\r\n    static parse(consoleCommandString) {\r\n        const split = consoleCommandString.split(\" \");\r\n\r\n        Log.info(split.join(\" \"));\r\n\r\n        return new ConsoleCommand(split[0], parseArgs(split.splice(1, 0).join(\" \")));\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/console/console-command.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 182,
    "kind": "variable",
    "name": "parseArgs",
    "memberof": "src/console/console-command.js",
    "static": true,
    "longname": "src/console/console-command.js~parseArgs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/console/console-command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "class",
    "name": "ConsoleCommand",
    "memberof": "src/console/console-command.js",
    "static": true,
    "longname": "src/console/console-command.js~ConsoleCommand",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/console/console-command.js",
    "importStyle": "ConsoleCommand",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 184,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/console/console-command.js~ConsoleCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/console/console-command.js~ConsoleCommand#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "base",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "base",
    "memberof": "src/console/console-command.js~ConsoleCommand",
    "static": false,
    "longname": "src/console/console-command.js~ConsoleCommand#base",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "args",
    "memberof": "src/console/console-command.js~ConsoleCommand",
    "static": false,
    "longname": "src/console/console-command.js~ConsoleCommand#args",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "parse",
    "memberof": "src/console/console-command.js~ConsoleCommand",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/console/console-command.js~ConsoleCommand.parse",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ConsoleCommand}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "consoleCommandString",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ConsoleCommand"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "src/console/console-interface.js",
    "content": "import Log from \"../core/log\";\r\nimport Utils from \"../core/utils\";\r\n\r\nconst readline = require(\"readline\");\r\n\r\nexport default class ConsoleInterface {\r\n    constructor() {\r\n        /**\r\n         * Whether the console interface has been successfully setup\r\n         * @type {Boolean}\r\n         */\r\n        this.ready = false;\r\n    }\r\n\r\n    /**\r\n     * @param {Bot} bot\r\n     */\r\n    setup(bot) {\r\n        Log.verbose(\"[ConsoleInterface] Setting up console interface\");\r\n\r\n        const ci = readline.createInterface({\r\n            input: process.stdin,\r\n            output: process.stdout\r\n        });\r\n\r\n        ci.prompt(true);\r\n\r\n        ci.on(\"line\", (input) => {\r\n            switch (input.trim()) {\r\n                case \"\": {\r\n                    break;\r\n                }\r\n\r\n                case \"stop\": {\r\n                    bot.disconnect();\r\n                    process.exit(0);\r\n\r\n                    break;\r\n                }\r\n\r\n                case \"help\": {\r\n                    console.log(\"CLI Commands: stop, help\");\r\n\r\n                    break;\r\n                }\r\n\r\n                case \"restart\": {\r\n                    bot.restart();\r\n\r\n                    break;\r\n                }\r\n\r\n                case \"ping\": {\r\n                    console.log(`${bot.client.ping}ms`);\r\n\r\n                    break;\r\n                }\r\n\r\n                case \"uptime\": {\r\n                    console.log(`Started ${Utils.timeAgoFromNow(bot.client.uptime)}`);\r\n\r\n                    break;\r\n                }\r\n\r\n                default: {\r\n                    console.log(`Invalid command: ${input}`);\r\n                }\r\n            }\r\n\r\n            ci.prompt();\r\n        });\r\n\r\n        ci.on(\"close\", () => {\r\n            // TODO: Temp. disabled due to interferring and going straight disconnection on vps/linux\r\n            /* bot.disconnect();\r\n            process.exit(0); */\r\n        });\r\n\r\n        // TODO: Should log before setting the prompt\r\n        this.ready = true;\r\n        Log.success(\"[ConsoleInterface.setup] Console interface setup completed\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/console/console-interface.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "variable",
    "name": "readline",
    "memberof": "src/console/console-interface.js",
    "static": true,
    "longname": "src/console/console-interface.js~readline",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/console/console-interface.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "class",
    "name": "ConsoleInterface",
    "memberof": "src/console/console-interface.js",
    "static": true,
    "longname": "src/console/console-interface.js~ConsoleInterface",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/console/console-interface.js",
    "importStyle": "ConsoleInterface",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 191,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/console/console-interface.js~ConsoleInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/console/console-interface.js~ConsoleInterface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "ready",
    "memberof": "src/console/console-interface.js~ConsoleInterface",
    "static": false,
    "longname": "src/console/console-interface.js~ConsoleInterface#ready",
    "access": "public",
    "description": "Whether the console interface has been successfully setup",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "setup",
    "memberof": "src/console/console-interface.js~ConsoleInterface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/console/console-interface.js~ConsoleInterface#setup",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Bot"
        ],
        "spread": false,
        "optional": false,
        "name": "bot",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "file",
    "name": "src/core/bot.js",
    "content": "import CommandParser from \"../commands/command-parser\";\r\nimport CommandExecutionContext from \"../commands/command-execution-context\";\r\nimport ConsoleInterface from \"../console/console-interface\";\r\nimport EmojiMenuManager from \"../emoji-ui/emoji-menu-manager\";\r\nimport CommandManager from \"../commands/command-manager\";\r\nimport Utils from \"./utils\";\r\nimport EmojiCollection from \"../collections/emoji-collection\";\r\nimport Settings from \"./settings\";\r\nimport FeatureManager from \"../features/feature-manager\";\r\nimport CommandLoader from \"../commands/command-loader\";\r\nimport Log from \"./log\";\r\nimport DataStore from \"../data-stores/data-store\";\r\nimport CommandAuthStore from \"../commands/command-auth-store\";\r\n\r\nconst Discord = require(\"discord.js\");\r\nconst Typer = require(\"@raxor1234/typer\");\r\nconst EventEmitter = require(\"events\");\r\nconst fs = require(\"fs\");\r\n\r\n/**\r\n * @extends EventEmitter\r\n */\r\nexport default class Bot extends EventEmitter {\r\n    /**\r\n     * @param {Object} data\r\n     */\r\n    constructor(data) {\r\n        super();\r\n\r\n        // Setup the class\r\n        this.setup(data);\r\n    }\r\n\r\n    /**\r\n     * Setup the bot from an object\r\n     * @param {Object} data\r\n     * @return {Promise}\r\n     */\r\n    async setup(data) {\r\n        Log.verbose(\"[Bot.setup] Validating data object\");\r\n\r\n        if (!Typer.validate({\r\n            paths: \"!object\",\r\n            authStore: \":authStore\",\r\n            dataStore: \":dataStore\",\r\n            argumentTypes: \"object\"\r\n        }, data, {\r\n            authStore: (val) => val instanceof CommandAuthStore,\r\n            dataStore: (val) => val instanceof DataStore\r\n        })) {\r\n            Log.throw(\"[Bot.setup] Invalid data object provided\");\r\n        }\r\n        else if (!Typer.validate({\r\n            settings: \"!string\",\r\n            commands: \"!string\",\r\n            emojis: \"string\"\r\n        }, data.paths)) {\r\n            Log.throw(\"[Bot.setup] Invalid paths object\");\r\n        }\r\n\r\n        /**\r\n         * @type {Settings}\r\n         * @readonly\r\n         */\r\n        this.settings = new Settings(data.paths.settings);\r\n\r\n        /**\r\n         * @type {DataStore}\r\n         * @readonly\r\n         */\r\n        this.dataStore = data.dataStore;\r\n\r\n        /**\r\n         * @type {CommandAuthStore}\r\n         * @readonly\r\n         */\r\n        this.authStore = data.authStore;\r\n\r\n        /**\r\n         * @type {(EmojiCollection|Null)}\r\n         * @readonly\r\n         */\r\n        this.emojis = data.paths.emojis ? EmojiCollection.fromFile(data.paths.emojis) : null;\r\n\r\n        /**\r\n         * @type {Discord.Client}\r\n         * @readonly\r\n         */\r\n        this.client = new Discord.Client();\r\n\r\n        /**\r\n         * @type {CommandManager}\r\n         * @readonly\r\n         */\r\n        this.commands = new CommandManager(this, data.paths.commands, this.authStore, data.argumentTypes ? data.argumentTypes : {});\r\n\r\n        /**\r\n         * @type {FeatureManager}\r\n         * @readonly\r\n         */\r\n        this.features = new FeatureManager();\r\n\r\n        /**\r\n         * @type {CommandLoader}\r\n         * @readonly\r\n         */\r\n        this.commandLoader = new CommandLoader(this.commands);\r\n\r\n        /**\r\n         * @type {ConsoleInterface}\r\n         * @readonly\r\n         */\r\n        this.console = new ConsoleInterface();\r\n\r\n        /**\r\n         * @type {EmojiMenuManager}\r\n         * @readonly\r\n         */\r\n        this.menus = new EmojiMenuManager(this.client);\r\n\r\n        // Load commands\r\n        await this.commandLoader.loadAll();\r\n\r\n        // Setup the Discord client's events\r\n        this.setupEvents();\r\n\r\n        Log.success(\"[Bot.setup] Bot setup completed\");\r\n    }\r\n\r\n    /**\r\n     * Setup the client's events\r\n     */\r\n    setupEvents() {\r\n        // TODO: Find better position\r\n        // TODO: Merge this resolvers with the (if provided) provided\r\n        // ones by the user.\r\n        const resolvers = {\r\n            user: (arg) => Utils.resolveId(arg),\r\n            channel: (arg) => Utils.resolveId(arg),\r\n            role: (arg) => Utils.resolveId(arg),\r\n            state: (arg) => Utils.translateState(arg)\r\n        };\r\n\r\n        // Discord client events\r\n        this.client.on(\"ready\", () => {\r\n            if (!this.console.ready) {\r\n                // Setup the console command interface\r\n                this.console.setup(this);\r\n            }\r\n\r\n            // Setup the command auth store\r\n            this.setupAuthStore();\r\n            Log.info(`[Bot.setupEvents] Logged in as ${this.client.user.tag}`);\r\n            Log.success(\"[Bot.setupEvents] Ready\");\r\n        });\r\n\r\n        this.client.on(\"message\", async (message) => {\r\n            if (!message.author.bot) {\r\n                if (CommandParser.isValid(message.content, this.commands, this.settings.general.prefix)) {\r\n                    this.commands.handle(\r\n                        new CommandExecutionContext(\r\n                            message,\r\n                            CommandParser.resolveArguments(CommandParser.getArguments(message.content), this.commands.argumentTypes, resolvers),\r\n                            this,\r\n\r\n                            // TODO: CRITICAL: Possibly messing up private messages support, hotfixed to use null (no auth) in DMs\r\n                            message.guild ? this.authStore.getAuthority(message.guild.id, message.member.roles.array().map((role) => role.name), message.author.id) : null,\r\n                            this.emojis\r\n                        ),\r\n\r\n                        CommandParser.parse(\r\n                            message.content,\r\n                            this.commands,\r\n                            this.settings.general.prefix\r\n                        )\r\n                    );\r\n                }\r\n                else if (message.content === \"?prefix\") {\r\n                    message.channel.send(`Command prefix: **${this.settings.general.prefix}**`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    setupAuthStore() {\r\n        const guilds = this.client.guilds.array();\r\n\r\n        let entries = 0;\r\n\r\n        for (let i = 0; i < guilds.length; i++) {\r\n            if (!this.authStore.contains(guilds[i].id)) {\r\n                this.authStore.create(guilds[i].id);\r\n                entries++;\r\n            }\r\n        }\r\n\r\n        if (entries > 0) {\r\n            Log.success(`[Bot.setupAuthStore] Added a total of ${entries} new auth store entries`);\r\n        }\r\n\r\n        Log.success(\"[Bot.setupAuthStore] Auth store setup completed\");\r\n    }\r\n\r\n    /**\r\n     * Connect the client\r\n     * @return {Promise}\r\n     */\r\n    async connect() {\r\n        Log.verbose(\"[Bot.connect] Starting\");\r\n        await this.client.login(this.settings.general.token);\r\n    }\r\n\r\n    /**\r\n     * Restart the bot's client\r\n     * @todo Use the reload modules param\r\n     * @param {Boolean} reloadModules Whether to reload all modules\r\n     * @return {Promise}\r\n     */\r\n    async restart(reloadModules = true) {\r\n        Log.verbose(\"[Bot.restart] Restarting\");\r\n\r\n        if (reloadModules) {\r\n            // TODO: Actually reload all the features and commands\r\n            // this.features.reloadAll(this);\r\n            await this.commandLoader.loadAll();\r\n        }\r\n\r\n        await this.disconnect();\r\n        await this.connect();\r\n    }\r\n\r\n    /**\r\n     * Disconnect the client\r\n     * @return {Promise}\r\n     */\r\n    async disconnect() {\r\n        this.settings.save();\r\n        await this.client.destroy();\r\n        Log.info(\"[Bot.disconnect] Disconnected\");\r\n    }\r\n\r\n    /**\r\n     * Clear all the files inside the temp folder\r\n     * @return {Promise}\r\n     */\r\n    static async clearTemp() {\r\n        if (fs.existsSync(\"./temp\")) {\r\n            fs.readdir(\"./temp\", (error, files) => {\r\n                for (let i = 0; i < files.length; i++) {\r\n                    fs.unlink(`./temp/${files[i]}`);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/core/bot.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 196,
    "kind": "variable",
    "name": "Discord",
    "memberof": "src/core/bot.js",
    "static": true,
    "longname": "src/core/bot.js~Discord",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/bot.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 197,
    "kind": "variable",
    "name": "Typer",
    "memberof": "src/core/bot.js",
    "static": true,
    "longname": "src/core/bot.js~Typer",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/bot.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "src/core/bot.js",
    "static": true,
    "longname": "src/core/bot.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/bot.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 199,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/core/bot.js",
    "static": true,
    "longname": "src/core/bot.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/bot.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "class",
    "name": "Bot",
    "memberof": "src/core/bot.js",
    "static": true,
    "longname": "src/core/bot.js~Bot",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/core/bot.js",
    "importStyle": "Bot",
    "description": "",
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 201,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/bot.js~Bot",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/bot.js~Bot#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "setup",
    "memberof": "src/core/bot.js~Bot",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/core/bot.js~Bot#setup",
    "access": "public",
    "description": "Setup the bot from an object",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "settings",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#settings",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Settings"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "dataStore",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#dataStore",
    "access": "public",
    "description": "",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "DataStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "authStore",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#authStore",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "CommandAuthStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "emojis",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#emojis",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "EmojiCollection",
        "Null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "client",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#client",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Discord.Client"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "commands",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#commands",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "CommandManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "features",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#features",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "FeatureManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "commandLoader",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#commandLoader",
    "access": "public",
    "description": "",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "CommandLoader"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "console",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#console",
    "access": "public",
    "description": "",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ConsoleInterface"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 212,
    "kind": "member",
    "name": "menus",
    "memberof": "src/core/bot.js~Bot",
    "static": false,
    "longname": "src/core/bot.js~Bot#menus",
    "access": "public",
    "description": "",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "EmojiMenuManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "setupEvents",
    "memberof": "src/core/bot.js~Bot",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/bot.js~Bot#setupEvents",
    "access": "public",
    "description": "Setup the client's events",
    "lineNumber": 133,
    "params": [],
    "return": null
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "setupAuthStore",
    "memberof": "src/core/bot.js~Bot",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/bot.js~Bot#setupAuthStore",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "connect",
    "memberof": "src/core/bot.js~Bot",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/core/bot.js~Bot#connect",
    "access": "public",
    "description": "Connect the client",
    "lineNumber": 208,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "restart",
    "memberof": "src/core/bot.js~Bot",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/core/bot.js~Bot#restart",
    "access": "public",
    "description": "Restart the bot's client",
    "lineNumber": 219,
    "todo": [
      "Use the reload modules param"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "reloadModules",
        "description": "Whether to reload all modules"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/core/bot.js~Bot",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/core/bot.js~Bot#disconnect",
    "access": "public",
    "description": "Disconnect the client",
    "lineNumber": 236,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "clearTemp",
    "memberof": "src/core/bot.js~Bot",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/core/bot.js~Bot.clearTemp",
    "access": "public",
    "description": "Clear all the files inside the temp folder",
    "lineNumber": 246,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 219,
    "kind": "file",
    "name": "src/core/chat-environment.js",
    "content": "/**\r\n * @enum {Number}\r\n */\r\nconst ChatEnvironment = {\r\n    Private: 0,\r\n    Guild: 1,\r\n    Anywhere: 3\r\n};\r\n\r\nexport default ChatEnvironment;\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/core/chat-environment.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 220,
    "kind": "variable",
    "name": "ChatEnvironment",
    "memberof": "src/core/chat-environment.js",
    "static": true,
    "longname": "src/core/chat-environment.js~ChatEnvironment",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/core/chat-environment.js",
    "importStyle": "ChatEnvironment",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{Number}"
      }
    ],
    "type": {
      "types": [
        "{\"Private\": *, \"Guild\": number, \"Anywhere\": number}"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/core/log.js",
    "content": "const colors = require(\"colors\");\r\nconst fs = require(\"fs\");\r\n\r\nexport default class Log {\r\n    /**\r\n     * @param {String} message\r\n     * @param {String} color\r\n     * @param {String} prefix\r\n     */\r\n    static async log(message, color = \"white\", prefix = null) {\r\n        const date = new Date().toISOString().replace(/T/, \" \").replace(/\\..+/, \"\");\r\n\r\n        // TODO: Make this next line work on the vps\r\n        // process.stdout.write(`\\x1B[2D[${date}] ${colors[color](message)}\\n> `);\r\n        console.log(`[${date}] ${colors[color](message)}`);\r\n\r\n        if (prefix !== null) {\r\n            message = `<${prefix.toUpperCase()}> ${message}`;\r\n        }\r\n\r\n        fs.writeFile(\"bot.log\", `[${date}] ${message}\\n`, {\r\n            flag: \"a\"\r\n        }, (err) => {\r\n            if (err) {\r\n                throw err;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     */\r\n    static info(message) {\r\n        Log.log(message, \"cyan\", \"info\");\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     */\r\n    static success(message) {\r\n        Log.log(message, \"green\", \"sucs\");\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     */\r\n    static warn(message) {\r\n        Log.log(message, \"yellow\", \"warn\");\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     */\r\n    static error(message) {\r\n        Log.log(message, \"red\", \"dang\");\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     */\r\n    static throw(message) {\r\n        Log.log(message, \"red\", \"dang\");\r\n        process.exit(1);\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     */\r\n    static async verbose(message) {\r\n        Log.log(message, \"grey\");\r\n    }\r\n\r\n    /**\r\n     * @param {String} message\r\n     */\r\n    static debug(message) {\r\n        Log.log(message, \"magenta\", \"dbug\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/core/log.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "name": "colors",
    "memberof": "src/core/log.js",
    "static": true,
    "longname": "src/core/log.js~colors",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/log.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/core/log.js",
    "static": true,
    "longname": "src/core/log.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/log.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "class",
    "name": "Log",
    "memberof": "src/core/log.js",
    "static": true,
    "longname": "src/core/log.js~Log",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/core/log.js",
    "importStyle": "Log",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "log",
    "memberof": "src/core/log.js~Log",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/core/log.js~Log.log",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prefix",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "info",
    "memberof": "src/core/log.js~Log",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/log.js~Log.info",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "success",
    "memberof": "src/core/log.js~Log",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/log.js~Log.success",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "warn",
    "memberof": "src/core/log.js~Log",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/log.js~Log.warn",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "error",
    "memberof": "src/core/log.js~Log",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/log.js~Log.error",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "throw",
    "memberof": "src/core/log.js~Log",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/log.js~Log.throw",
    "access": "public",
    "description": "",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "verbose",
    "memberof": "src/core/log.js~Log",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/core/log.js~Log.verbose",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "debug",
    "memberof": "src/core/log.js~Log",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/log.js~Log.debug",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 233,
    "kind": "file",
    "name": "src/core/permission.js",
    "content": "import { Permissions as DiscordPermission } from \"discord.js\"\r\n\r\n/**\r\n * @enum {Number}\r\n */\r\nconst Permission = {\r\n    CreateInstantInvite: {\r\n        name: \"Create Instant Invites\",\r\n        permission: DiscordPermission.FLAGS.CREATE_INSTANT_INVITE\r\n    },\r\n\r\n    KickMembers: {\r\n        name: \"Kick Members\",\r\n        permission: DiscordPermission.FLAGS.KICK_MEMBERS\r\n    },\r\n\r\n    BanMembers: {\r\n        name: \"Ban Members\",\r\n        permission: DiscordPermission.FLAGS.BAN_MEMBERS\r\n    },\r\n\r\n    Admin: {\r\n        name: \"Administrator\",\r\n        permission: DiscordPermission.FLAGS.ADMINISTRATOR\r\n    },\r\n\r\n    ManageChannels: {\r\n        name: \"Manage Channels\",\r\n        permission: DiscordPermission.FLAGS.MANAGE_CHANNELS\r\n    },\r\n\r\n    ManageGuild: {\r\n        name: \"Manage Guild\",\r\n        permission: DiscordPermission.FLAGS.MANAGE_GUILD\r\n    },\r\n\r\n    AddReactions: {\r\n        name: \"Add Reactions\",\r\n        permission: DiscordPermission.FLAGS.ADD_REACTIONS\r\n    },\r\n\r\n    ViewAuditLog: {\r\n        name: \"View Audit Log\",\r\n        permission: DiscordPermission.FLAGS.VIEW_AUDIT_LOG\r\n    },\r\n\r\n    ViewChannel: {\r\n        name: \"View Channel\",\r\n        permission: DiscordPermission.FLAGS.VIEW_CHANNEL\r\n    },\r\n\r\n    SendMessages: {\r\n        name: \"Send Messages\",\r\n        permission: DiscordPermission.FLAGS.SEND_MESSAGES\r\n    },\r\n\r\n    SendTTSMessages: {\r\n        name: \"Send TTS Messages\",\r\n        permission: DiscordPermission.FLAGS.SEND_TTS_MESSAGES\r\n    },\r\n\r\n    ManageMessages: {\r\n        name: \"Manage Messages\",\r\n        permission: DiscordPermission.FLAGS.MANAGE_MESSAGES\r\n    },\r\n\r\n    EmbedLinks: {\r\n        name: \"Embed Links\",\r\n        permission: DiscordPermission.FLAGS.EMBED_LINKS\r\n    },\r\n\r\n    AttachFiles: {\r\n        name: \"Attach Files\",\r\n        permission: DiscordPermission.FLAGS.ATTACH_FILES\r\n    },\r\n\r\n    ReadMessageHistory: {\r\n        name: \"Read Message History\",\r\n        permission: DiscordPermission.FLAGS.READ_MESSAGE_HISTORY\r\n    },\r\n\r\n    MentionEveryone: {\r\n        name: \"Mention Everyone\",\r\n        permission: DiscordPermission.FLAGS.MENTION_EVERYONE\r\n    },\r\n\r\n    UseExternalEmojis: {\r\n        name: \"Use External Emojis\",\r\n        permission: DiscordPermission.FLAGS.USE_EXTERNAL_EMOJIS\r\n    },\r\n\r\n    VoiceConnect: {\r\n        name: \"Voice Connect\",\r\n        permission: DiscordPermission.FLAGS.CONNECT\r\n    },\r\n\r\n    VoiceSpeak: {\r\n        name: \"Voice Speak\",\r\n        permission: DiscordPermission.FLAGS.SPEAK\r\n    },\r\n\r\n    VoiceMuteMembers: {\r\n        name: \"Voice Mute Members\",\r\n        permission: DiscordPermission.FLAGS.MUTE_MEMBERS\r\n    },\r\n\r\n    VoiceDeafenMembers: {\r\n        name: \"Voice Deafen Members\",\r\n        permission: DiscordPermission.FLAGS.DEAFEN_MEMBERS\r\n    },\r\n\r\n    VoiceMoveMembers: {\r\n        name: \"Voice Move Members\",\r\n        permission: DiscordPermission.FLAGS.MOVE_MEMBERS\r\n    },\r\n\r\n    VoiceUseVAD: {\r\n        name: \"Voice Use VAD\",\r\n        permission: DiscordPermission.FLAGS.USE_VAD\r\n    },\r\n\r\n    ChangeNickname: {\r\n        name: \"Change Nickname\",\r\n        permission: DiscordPermission.FLAGS.CHANGE_NICKNAME\r\n    },\r\n\r\n    ManageNicknames: {\r\n        name: \"Manage Nicknames\",\r\n        permission: DiscordPermission.FLAGS.MANAGE_NICKNAMES\r\n    },\r\n\r\n    ManageRoles: {\r\n        name: \"Manage Roles\",\r\n        permission: DiscordPermission.FLAGS.MANAGE_ROLES\r\n    },\r\n\r\n    ManageWebhooks: {\r\n        name: \"Manage Webhooks\",\r\n        permission: DiscordPermission.FLAGS.MANAGE_WEBHOOKS\r\n    },\r\n\r\n    ManageEmojis: {\r\n        name: \"Manage Emojis\",\r\n        permission: DiscordPermission.FLAGS.MANAGE_EMOJIS\r\n    }\r\n};\r\n\r\nexport default Permission;\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/core/permission.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 234,
    "kind": "variable",
    "name": "Permission",
    "memberof": "src/core/permission.js",
    "static": true,
    "longname": "src/core/permission.js~Permission",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/core/permission.js",
    "importStyle": "Permission",
    "description": "",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{Number}"
      }
    ],
    "type": {
      "types": [
        "{\"CreateInstantInvite\": *, \"KickMembers\": *, \"BanMembers\": *, \"Admin\": *, \"ManageChannels\": *, \"ManageGuild\": *, \"AddReactions\": *, \"ViewAuditLog\": *, \"ViewChannel\": *, \"SendMessages\": *, \"SendTTSMessages\": *, \"ManageMessages\": *, \"EmbedLinks\": *, \"AttachFiles\": *, \"ReadMessageHistory\": *, \"MentionEveryone\": *, \"UseExternalEmojis\": *, \"VoiceConnect\": *, \"VoiceSpeak\": *, \"VoiceMuteMembers\": *, \"VoiceDeafenMembers\": *, \"VoiceMoveMembers\": *, \"VoiceUseVAD\": *, \"ChangeNickname\": *, \"ManageNicknames\": *, \"ManageRoles\": *, \"ManageWebhooks\": *, \"ManageEmojis\": *}"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "file",
    "name": "src/core/settings.js",
    "content": "import Log from \"./log\";\r\n\r\nconst fs = require(\"fs\");\r\nconst Typer = require(\"@raxor1234/typer/typer\");\r\n\r\nexport default class Settings {\r\n    /**\r\n     * @param {String} path\r\n     */\r\n    constructor(path) {\r\n        if (fs.existsSync(path)) {\r\n            /**\r\n             * @type {String}\r\n             * @private\r\n             * @readonly\r\n             */\r\n            this.path = path;\r\n\r\n            const jsonObj = JSON.parse(fs.readFileSync(path).toString());\r\n\r\n            // TODO: Should be automatic\r\n            // TODO: Should be validated using Schema\r\n            /**\r\n             * @type {Object}\r\n             * @readonly\r\n             */\r\n            this.general = jsonObj.general;\r\n\r\n            /**\r\n             * @type {Object}\r\n             * @readonly\r\n             */\r\n            this.keys = jsonObj.keys;\r\n\r\n            // Validate settings after loading them\r\n            this.validate();\r\n        }\r\n        else {\r\n            Log.throw(\"Could not load settings: File does not exist\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Save the local settings into path\r\n     */\r\n    save() {\r\n        fs.writeFileSync(this.path, JSON.stringify({\r\n            general: this.general,\r\n            keys: this.keys\r\n        }, null, 4));\r\n    }\r\n\r\n    // TODO\r\n    validate() {\r\n        if (!Typer.validate({\r\n            token: \"!string\",\r\n            prefix: \"!string\"\r\n        }, this.general)) {\r\n            Log.throw(\"[Settings.validate] Invalid settings provided\");\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/core/settings.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/core/settings.js",
    "static": true,
    "longname": "src/core/settings.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/settings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "variable",
    "name": "Typer",
    "memberof": "src/core/settings.js",
    "static": true,
    "longname": "src/core/settings.js~Typer",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/settings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 238,
    "kind": "class",
    "name": "Settings",
    "memberof": "src/core/settings.js",
    "static": true,
    "longname": "src/core/settings.js~Settings",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/core/settings.js",
    "importStyle": "Settings",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 239,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/settings.js~Settings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/settings.js~Settings#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "path",
    "memberof": "src/core/settings.js~Settings",
    "static": false,
    "longname": "src/core/settings.js~Settings#path",
    "access": "private",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "general",
    "memberof": "src/core/settings.js~Settings",
    "static": false,
    "longname": "src/core/settings.js~Settings#general",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "keys",
    "memberof": "src/core/settings.js~Settings",
    "static": false,
    "longname": "src/core/settings.js~Settings#keys",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "save",
    "memberof": "src/core/settings.js~Settings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/settings.js~Settings#save",
    "access": "public",
    "description": "Save the local settings into path",
    "lineNumber": 46,
    "params": [],
    "return": null
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "validate",
    "memberof": "src/core/settings.js~Settings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/settings.js~Settings#validate",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "src/core/user-config.js",
    "content": "import Log from \"./log\";\r\n\r\nconst fs = require(\"fs\");\r\nconst _ = require(\"lodash\");\r\n\r\nexport default class UserConfig {\r\n    /**\r\n     * @param {String} path\r\n     */\r\n    constructor(path) {\r\n        if (fs.existsSync(path)) {\r\n            /**\r\n             * @type {String}\r\n             * @private\r\n             * @readonly\r\n             */\r\n            this.path = path;\r\n\r\n            /**\r\n             * @type {any}\r\n             * @private\r\n             */\r\n            this.config = JSON.parse(fs.readFileSync(path).toString());\r\n        }\r\n        else {\r\n            Log.error(\"Could not load user config: File does not exist\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {*} value\r\n     * @param {(Snowflake|Null)} guildId\r\n     * @param {String} template\r\n     */\r\n    set(path, value, guildId = null, template = \"default\") {\r\n        const finalPath = guildId ? `${guildId}.${path}` : path;\r\n\r\n        Log.info(finalPath);\r\n\r\n        if (this.get(`${template}.${path}`, guildId) === value) {\r\n            _.unset(this.config, finalPath);\r\n        }\r\n        else {\r\n            _.set(this.config, finalPath, value);\r\n            Log.info(`set ${finalPath} to ${value}`);\r\n        }\r\n\r\n        this.save();\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {(Snowflake|Null)} guildId\r\n     * @param {String} template\r\n     * @returns {*}\r\n     */\r\n    get(path, guildId = null, template = \"default\") {\r\n        const finalPath = guildId ? `${guildId}.${path}` : path;\r\n\r\n        if (!this.contains(path, guildId)) {\r\n            return _.get(this.config, `${template}.${path}`);\r\n        }\r\n\r\n        return _.get(this.config, finalPath);\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {*} item\r\n     * @param {(Snowflake|Null)} guildId\r\n     */\r\n    push(path, item, guildId = null) {\r\n        const items = this.get(path, guildId).slice(0);\r\n\r\n        items.push(item);\r\n        this.set(path, items, guildId);\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {(Snowflake|Null)} guildId\r\n     * @returns {boolean}\r\n     */\r\n    contains(path, guildId = null) {\r\n        const finalPath = guildId ? `${guildId}.${path}` : path;\r\n\r\n        return _.has(this.config, finalPath);\r\n    }\r\n\r\n    /**\r\n     * @param {Snowflake} id\r\n     */\r\n    createGuild(id) {\r\n        this.set(id, {});\r\n        this.save();\r\n    }\r\n\r\n    /**\r\n     * @param {Snowflake} id\r\n     */\r\n    removeGuild(id) {\r\n        delete this.config[id];\r\n        this.save();\r\n    }\r\n\r\n    save() {\r\n        fs.writeFileSync(this.path, JSON.stringify(this.config, null, 4));\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/core/user-config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/core/user-config.js",
    "static": true,
    "longname": "src/core/user-config.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/user-config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 247,
    "kind": "variable",
    "name": "_",
    "memberof": "src/core/user-config.js",
    "static": true,
    "longname": "src/core/user-config.js~_",
    "access": "private",
    "export": false,
    "importPath": "discord-anvil/src/core/user-config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 248,
    "kind": "class",
    "name": "UserConfig",
    "memberof": "src/core/user-config.js",
    "static": true,
    "longname": "src/core/user-config.js~UserConfig",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/core/user-config.js",
    "importStyle": "UserConfig",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 249,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/user-config.js~UserConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 250,
    "kind": "member",
    "name": "path",
    "memberof": "src/core/user-config.js~UserConfig",
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#path",
    "access": "private",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "config",
    "memberof": "src/core/user-config.js~UserConfig",
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#config",
    "access": "private",
    "description": "",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "set",
    "memberof": "src/core/user-config.js~UserConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#set",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake",
          "Null"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "get",
    "memberof": "src/core/user-config.js~UserConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#get",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake",
          "Null"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "push",
    "memberof": "src/core/user-config.js~UserConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#push",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake",
          "Null"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "contains",
    "memberof": "src/core/user-config.js~UserConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#contains",
    "access": "public",
    "description": "",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake",
          "Null"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "createGuild",
    "memberof": "src/core/user-config.js~UserConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#createGuild",
    "access": "public",
    "description": "",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "removeGuild",
    "memberof": "src/core/user-config.js~UserConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#removeGuild",
    "access": "public",
    "description": "",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "save",
    "memberof": "src/core/user-config.js~UserConfig",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/user-config.js~UserConfig#save",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 259,
    "kind": "file",
    "name": "src/core/utils.js",
    "content": "import TimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\n\r\nTimeAgo.locale(en);\r\n\r\nconst fs = require(\"fs\");\r\nconst timeAgo = new TimeAgo(\"en-US\");\r\n\r\nexport default class Utils {\r\n    /**\r\n     * @param {String} mention\r\n     * @returns {String}\r\n     */\r\n    static resolveId(mention) {\r\n        return mention\r\n            .replace(\"<\", \"\")\r\n            .replace(\">\", \"\")\r\n            .replace(\"@\", \"\")\r\n            .replace(\"!\", \"\")\r\n            .replace(\"&\", \"\")\r\n            .replace(\"#\", \"\");\r\n    }\r\n\r\n    /**\r\n     * @param {Number} min\r\n     * @param {Number} max\r\n     * @return {Number}\r\n     */\r\n    static getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * max) + min;\r\n    }\r\n\r\n    /**\r\n     * @param {Array} array\r\n     * @return {Array}\r\n     */\r\n    static shuffle(array) {\r\n        let counter = array.length;\r\n\r\n        // While there are elements in the array\r\n        while (counter > 0) {\r\n            // Pick a random index\r\n            const index = Math.floor(Math.random() * counter);\r\n\r\n            // Decrease counter by 1\r\n            counter--;\r\n\r\n            // And swap the last element with it\r\n            const temp = array[counter];\r\n\r\n            array[counter] = array[index];\r\n            array[index] = temp;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} options\r\n     * @param {User} requester\r\n     * @param {Discord.Channel} channel\r\n     * @param {String} [footerSuffix=\"\"]\r\n     * @return {Promise<Discord.Message>}\r\n     */\r\n    static async send(options, requester, channel, footerSuffix = \"\") {\r\n        const optionsCpy = options;\r\n\r\n        optionsCpy.footer = {\r\n            icon_url: requester.avatarURL,\r\n            text: `Requested by ${requester.username} ${footerSuffix}`\r\n        };\r\n\r\n        if (!optionsCpy.color) {\r\n            // TODO: Color is literal hex, not string (gives error)\r\n            optionsCpy.color = \"GREEN\";\r\n        }\r\n\r\n        return await channel.send({\r\n            embed: options\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {Number} milliseconds\r\n     * @param {Number} [seconds=0]\r\n     * @param {Number} [minutes=0]\r\n     * @param {Number} [hours=0]\r\n     * @param {Number} [days=0]\r\n     * @param {Number} [months=0]\r\n     * @param {Number} [years=0]\r\n     * @return {Number}\r\n     */\r\n    static timeFromNow(milliseconds, seconds = 0, minutes = 0, hours = 0, days = 0, months = 0, years = 0) {\r\n        const now = new Date();\r\n\r\n        return new Date(years + now.getFullYear(), months + now.getMonth(), days + now.getDate(), hours + now.getHours(), minutes + now.getMinutes(), seconds + now.getSeconds(), milliseconds + now.getMilliseconds()).getTime();\r\n    }\r\n\r\n    /**\r\n     * @param {Number} timestamp\r\n     * @return {String}\r\n     */\r\n    static timeAgo(timestamp) {\r\n        return timeAgo.format(timestamp);\r\n    }\r\n\r\n    /**\r\n     * @param {Number} timestamp\r\n     * @returns {String}\r\n     */\r\n    static timeAgoFromNow(timestamp) {\r\n        return Utils.timeAgo(Date.now() - timestamp);\r\n    }\r\n\r\n    /**\r\n     * @param {String} state\r\n     * @return {Boolean}\r\n     */\r\n    static translateState(state) {\r\n        return /^(1|true|on|y|yes)$/i.test(state);\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {Object} data\r\n     * @return {Promise}\r\n     */\r\n    static async writeJson(path, data) {\r\n        return new Promise((resolve) => {\r\n            fs.writeFile(path, JSON.stringify(data), (error) => {\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @return {Promise<Object>}\r\n     */\r\n    static async readJson(path) {\r\n        return new Promise((resolve) => {\r\n            fs.readFile(path, (error, data) => {\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n\r\n                resolve(JSON.parse(data.toString()));\r\n            });\r\n        });\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/core/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/core/utils.js",
    "static": true,
    "longname": "src/core/utils.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "timeAgo",
    "memberof": "src/core/utils.js",
    "static": true,
    "longname": "src/core/utils.js~timeAgo",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/core/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 262,
    "kind": "class",
    "name": "Utils",
    "memberof": "src/core/utils.js",
    "static": true,
    "longname": "src/core/utils.js~Utils",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/core/utils.js",
    "importStyle": "Utils",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "resolveId",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~Utils.resolveId",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "mention",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "getRandomInt",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~Utils.getRandomInt",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "shuffle",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~Utils.shuffle",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "send",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/core/utils.js~Utils.send",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "User"
        ],
        "spread": false,
        "optional": false,
        "name": "requester",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Discord.Channel"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "footerSuffix",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Discord.Message>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "timeFromNow",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~Utils.timeFromNow",
    "access": "public",
    "description": "",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "milliseconds",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "seconds",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "minutes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "hours",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "days",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "months",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "years",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "timeAgo",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~Utils.timeAgo",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timestamp",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "timeAgoFromNow",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~Utils.timeAgoFromNow",
    "access": "public",
    "description": "",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timestamp",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "translateState",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~Utils.translateState",
    "access": "public",
    "description": "",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "writeJson",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/core/utils.js~Utils.writeJson",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "readJson",
    "memberof": "src/core/utils.js~Utils",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/core/utils.js~Utils.readJson",
    "access": "public",
    "description": "",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/data-stores/data-store.js",
    "content": "export default class DataStore {\r\n    /**\r\n     * Retrieve guild data\r\n     * @abstract\r\n     * @param {String} path\r\n     * @returns {*}\r\n     */\r\n    get(path) {\r\n        throw new Error(\"[DataStore.get] Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Set guild data\r\n     * @abstract\r\n     * @param {String} path\r\n     * @param {*} value\r\n     * @returns {*}\r\n     */\r\n    set(path, value) {\r\n        throw new Error(\"[DataStore.set] Method not implemented.\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/data-stores/data-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "class",
    "name": "DataStore",
    "memberof": "src/data-stores/data-store.js",
    "static": true,
    "longname": "src/data-stores/data-store.js~DataStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/data-stores/data-store.js",
    "importStyle": "DataStore",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "get",
    "memberof": "src/data-stores/data-store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/data-store.js~DataStore#get",
    "access": "public",
    "description": "Retrieve guild data",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "set",
    "memberof": "src/data-stores/data-store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/data-store.js~DataStore#set",
    "access": "public",
    "description": "Set guild data",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 277,
    "kind": "file",
    "name": "src/data-stores/json-store.js",
    "content": "import ObjectStore from \"./object-store\";\r\n\r\nconst fs = require(\"fs\");\r\nconst _ = require(\"lodash\");\r\n\r\n/**\r\n * @extends ObjectStore\r\n */\r\nexport default class JsonStore extends ObjectStore {\r\n    /**\r\n     * @param {String} path\r\n     */\r\n    constructor(path) {\r\n        super(null);\r\n\r\n        /**\r\n         * @type {String}\r\n         * @private\r\n         */\r\n        this.path = path;\r\n    }\r\n\r\n    /**\r\n     * Reload the data from the source file\r\n     * @returns {Promise}\r\n     */\r\n    async reload() {\r\n        this.validate();\r\n\r\n        return new Promise((resolve) => {\r\n            fs.readFile(this.path, (error, data) => {\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n\r\n                this.data = JSON.parse(data.toString());\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save the data into the source file\r\n     * @return {Promise}\r\n     */\r\n    async save() {\r\n        this.validate();\r\n\r\n        return new Promise((resolve) => {\r\n            fs.writeFile(this.path, JSON.stringify(this.data), (error) => {\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Ensure that the source file exists\r\n     */\r\n    validate() {\r\n        if (!fs.existsSync(this.path)) {\r\n            throw new Error(`[JsonAdapter] Path does not exist: ${this.path}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve guild data\r\n     * @param {String} path\r\n     * @returns {*}\r\n     */\r\n    get(path) {\r\n        if (!this.loaded) {\r\n            throw new Error(\"[JsonStore.get] No data is currently loaded.\");\r\n        }\r\n\r\n        return _.get(this.data, path);\r\n    }\r\n\r\n    /**\r\n     * Set guild data\r\n     * @param {String} path\r\n     * @param {*} value\r\n     */\r\n    set(path, value) {\r\n        if (!this.loaded) {\r\n            throw new Error(\"[JsonStore.set] No data is currently loaded.\");\r\n        }\r\n\r\n        _.set(this.data, path, value);\r\n    }\r\n\r\n    /**\r\n     * Merge guild data\r\n     * @param {String} path\r\n     * @param {*} value\r\n     */\r\n    merge(path, value) {\r\n        if (!this.loaded) {\r\n            throw new Error(\"[JsonStore.merge] No data is currently loaded.\");\r\n        }\r\n\r\n        throw new Error(\"[JsonStore.merge] Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Determine whether any data is loaded\r\n     * @return {Boolean} Whether any data is currently loaded\r\n     */\r\n    get loaded() {\r\n        return this.data !== null;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/data-stores/json-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 278,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/data-stores/json-store.js",
    "static": true,
    "longname": "src/data-stores/json-store.js~fs",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/data-stores/json-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "variable",
    "name": "_",
    "memberof": "src/data-stores/json-store.js",
    "static": true,
    "longname": "src/data-stores/json-store.js~_",
    "access": "private",
    "export": false,
    "importPath": "discord-anvil/src/data-stores/json-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 280,
    "kind": "class",
    "name": "JsonStore",
    "memberof": "src/data-stores/json-store.js",
    "static": true,
    "longname": "src/data-stores/json-store.js~JsonStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/data-stores/json-store.js",
    "importStyle": "JsonStore",
    "description": "",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 281,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 282,
    "kind": "member",
    "name": "path",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#path",
    "access": "private",
    "description": "",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "reload",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#reload",
    "access": "public",
    "description": "Reload the data from the source file",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "data",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#data",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "save",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#save",
    "access": "public",
    "description": "Save the data into the source file",
    "lineNumber": 46,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "validate",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#validate",
    "access": "public",
    "description": "Ensure that the source file exists",
    "lineNumber": 63,
    "params": [],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "get",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#get",
    "access": "public",
    "description": "Retrieve guild data",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "set",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#set",
    "access": "public",
    "description": "Set guild data",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "merge",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#merge",
    "access": "public",
    "description": "Merge guild data",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "get",
    "name": "loaded",
    "memberof": "src/data-stores/json-store.js~JsonStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/json-store.js~JsonStore#loaded",
    "access": "public",
    "description": "Determine whether any data is loaded",
    "lineNumber": 112,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether any data is currently loaded"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "file",
    "name": "src/data-stores/mongodb-store.js",
    "content": "import DataStore from \"./data-store\";\r\n\r\nconst mongodb = require(\"mongodb\");\r\n\r\n/**\r\n * @extends DataStore\r\n */\r\nexport default class MongodbStore extends DataStore {\r\n    /**\r\n     * @param {String} url\r\n     */\r\n    constructor(url) {\r\n        super();\r\n\r\n        /**\r\n         * @type {String}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * @type {MongoClient}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.client = mongodb.MongoClient;\r\n\r\n        /**\r\n         * @type {*}\r\n         * @private\r\n         */\r\n        this.db = null;\r\n    }\r\n\r\n    /**\r\n     * @param {String} database The database name\r\n     */\r\n    connect(database) {\r\n        this.client.connect(this.url, (error, db) => {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n\r\n            this.db = db.db(database);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retrieve guild data\r\n     * @param {String} path\r\n     * @returns {*}\r\n     */\r\n    get(path) {\r\n        throw new Error(\"[MongoDb.get] Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Set guild data\r\n     * @param {String} path\r\n     * @param {*} data\r\n     */\r\n    set(path, data) {\r\n        throw new Error(\"[MongoDb.set] Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Merge guild data\r\n     * @param {String} path\r\n     * @param {*} data\r\n     */\r\n    merge(path, data) {\r\n        throw new Error(\"[MongoDb.merge] Method not implemented.\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/data-stores/mongodb-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "name": "mongodb",
    "memberof": "src/data-stores/mongodb-store.js",
    "static": true,
    "longname": "src/data-stores/mongodb-store.js~mongodb",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/data-stores/mongodb-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "class",
    "name": "MongodbStore",
    "memberof": "src/data-stores/mongodb-store.js",
    "static": true,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/data-stores/mongodb-store.js",
    "importStyle": "MongodbStore",
    "description": "",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 294,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data-stores/mongodb-store.js~MongodbStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "url",
    "memberof": "src/data-stores/mongodb-store.js~MongodbStore",
    "static": false,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore#url",
    "access": "private",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "name": "client",
    "memberof": "src/data-stores/mongodb-store.js~MongodbStore",
    "static": false,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore#client",
    "access": "private",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "MongoClient"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 297,
    "kind": "member",
    "name": "db",
    "memberof": "src/data-stores/mongodb-store.js~MongodbStore",
    "static": false,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore#db",
    "access": "private",
    "description": "",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "connect",
    "memberof": "src/data-stores/mongodb-store.js~MongodbStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore#connect",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "database",
        "description": "The database name"
      }
    ],
    "return": null
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "get",
    "memberof": "src/data-stores/mongodb-store.js~MongodbStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore#get",
    "access": "public",
    "description": "Retrieve guild data",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "set",
    "memberof": "src/data-stores/mongodb-store.js~MongodbStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore#set",
    "access": "public",
    "description": "Set guild data",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "merge",
    "memberof": "src/data-stores/mongodb-store.js~MongodbStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mongodb-store.js~MongodbStore#merge",
    "access": "public",
    "description": "Merge guild data",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 303,
    "kind": "file",
    "name": "src/data-stores/mysql-store.js",
    "content": "import DataStore from \"./data-store\";\r\n\r\nconst mysql = require(\"mysql\");\r\nconst _ = require(\"lodash\");\r\n\r\n/**\r\n * @extends DataStore\r\n */\r\nexport default class MysqlStore extends DataStore {\r\n    /**\r\n     * @param {Object} data\r\n     */\r\n    constructor(data) {\r\n        super();\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n        this.data = data;\r\n\r\n        /**\r\n         * @type {*}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.connection = mysql.createConnection(data);\r\n\r\n        /**\r\n         * @type {Boolean}\r\n         * @private\r\n         */\r\n        this.connected = false;\r\n    }\r\n\r\n    /**\r\n     * Connect to the database\r\n     * @returns {Promise<MysqlStore>}\r\n     */\r\n    connect() {\r\n        return new Promise((resolve, reject) => {\r\n            this.connection.connect((err) => {\r\n                if (err) {\r\n                    reject(reject);\r\n                }\r\n                else {\r\n                    this.connected = true;\r\n                    resolve(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disconnect from the database\r\n     * @returns {Promise<MysqlStore>}\r\n     */\r\n    disconnect() {\r\n        return new Promise((resolve, reject) => {\r\n            this.connection.end((err) => {\r\n                if (err) {\r\n                    reject(reject);\r\n                }\r\n                else {\r\n                    this.connected = false;\r\n                    resolve(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute a query in the database\r\n     * @param {String} query\r\n     * @param {*} args\r\n     * @param {Number} [timeout=5000]\r\n     * @returns {Promise<Object>}\r\n     */\r\n    query(query, args = [], timeout = 5000) {\r\n        return new Promise((resolve, reject) => {\r\n            this.connection.query({\r\n                sql: query,\r\n                values: args,\r\n                timeout: timeout\r\n            }, (error, results, fields) => {\r\n                if (error) {\r\n                    reject(error);\r\n                }\r\n                else {\r\n                    resolve({\r\n                        results: results,\r\n                        fields: fields\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retrieve guild data\r\n     * @param {String} path\r\n     * @param {(Snowflake|Null)} [guildId=null]\r\n     * @returns {Promise}\r\n     */\r\n    async get(path, guildId = null) {\r\n        if (!this.loaded) {\r\n            throw new Error(\"[MysqlStore.get] No data is currently loaded.\");\r\n        }\r\n\r\n        let query = \"SELECT * FROM ?? WHERE id = ?\";\r\n\r\n        const splitPath = MysqlStore.cleanPath(path, guildId);\r\n\r\n        if (splitPath.length === 1) {\r\n            query = \"SELECT * FROM ??\";\r\n        }\r\n\r\n        const { results, fields } = await this.query(query, splitPath);\r\n\r\n        if (splitPath.length === 1) {\r\n            const rtn = [];\r\n            for (let i = 0; i < results.length; i++) {\r\n                const row = results[i];\r\n                rtn[row.id] = row;\r\n            }\r\n            return rtn;\r\n        }\r\n\r\n        if (fields.length === 0) {\r\n            return undefined;\r\n        }\r\n        else if (splitPath.length === 2) {\r\n            return results[0];\r\n        }\r\n        else if (splitPath.length === 3) {\r\n            return results[0][splitPath[2]];\r\n        }\r\n\r\n        const column = results[0][splitPath[2]];\r\n        const obj = JSON.parse(column);\r\n\r\n        return _.get(obj, path.substr(path.substr(26).indexOf(\".\") + 27));\r\n    }\r\n\r\n    /**\r\n     * Set guild data\r\n     * @param {String} path\r\n     * @param {*} value\r\n     * @param {(Snowflake|Null)} [guildId=null]\r\n     * @returns {Promise<Object>}\r\n     */\r\n    async set(path, value, guildId = null) {\r\n        if (!this.loaded) {\r\n            throw new Error(\"[MysqlStore.set] No data is currently loaded.\");\r\n        }\r\n\r\n        const query = \"UPDATE ?? SET ??=? WHERE  `id`=?;\";\r\n        const splitPath = MysqlStore.cleanPath(path, guildId);\r\n\r\n        if (splitPath.length < 3) {\r\n            throw new Error(`[MysqlAdapter.set] Invalid path: ${path}`);\r\n        }\r\n\r\n        const { results, fields } = await this.query(query, [\r\n            splitPath[0],\r\n            splitPath[2],\r\n            value,\r\n            splitPath[1]\r\n        ]);\r\n\r\n        return { results, fields };\r\n    }\r\n\r\n    /**\r\n     * Merge guild data\r\n     * @param {String} path\r\n     * @param {*} value\r\n     * @param {(Snowflake|Null)} [guildId=null]\r\n     */\r\n    merge(path, value, guildId = null) {\r\n        if (!this.loaded) {\r\n            throw new Error(\"[MysqlStore.merge] No data is currently loaded.\");\r\n        }\r\n\r\n        throw new Error(\"[MysqlStore.merge] Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {Snowflake} guildId\r\n     * @returns {Array<String>}\r\n     */\r\n    static cleanPath(path, guildId) {\r\n        return `${guildId ? `guilds.${guildId}.` : \"\"}${path}`.split(\".\");\r\n    }\r\n\r\n    /**\r\n     * Determine whether any data is loaded\r\n     * @returns {Boolean} Whether any data is currently loaded\r\n     */\r\n    get loaded() {\r\n        return this.data !== null && this.connected;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/data-stores/mysql-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 304,
    "kind": "variable",
    "name": "mysql",
    "memberof": "src/data-stores/mysql-store.js",
    "static": true,
    "longname": "src/data-stores/mysql-store.js~mysql",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/data-stores/mysql-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "variable",
    "name": "_",
    "memberof": "src/data-stores/mysql-store.js",
    "static": true,
    "longname": "src/data-stores/mysql-store.js~_",
    "access": "private",
    "export": false,
    "importPath": "discord-anvil/src/data-stores/mysql-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 306,
    "kind": "class",
    "name": "MysqlStore",
    "memberof": "src/data-stores/mysql-store.js",
    "static": true,
    "longname": "src/data-stores/mysql-store.js~MysqlStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/data-stores/mysql-store.js",
    "importStyle": "MysqlStore",
    "description": "",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 307,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "data",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#data",
    "access": "private",
    "description": "",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "connection",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#connection",
    "access": "private",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "connected",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#connected",
    "access": "private",
    "description": "",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "connect",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#connect",
    "access": "public",
    "description": "Connect to the database",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<MysqlStore>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<MysqlStore>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#disconnect",
    "access": "public",
    "description": "Disconnect from the database",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<MysqlStore>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<MysqlStore>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "query",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#query",
    "access": "public",
    "description": "Execute a query in the database",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Object>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5000",
        "defaultRaw": 5000,
        "name": "timeout",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "get",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#get",
    "access": "public",
    "description": "Retrieve guild data",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake",
          "Null"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "set",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#set",
    "access": "public",
    "description": "Set guild data",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Object>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake",
          "Null"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "merge",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#merge",
    "access": "public",
    "description": "Merge guild data",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake",
          "Null"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "cleanPath",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/data-stores/mysql-store.js~MysqlStore.cleanPath",
    "access": "public",
    "description": "",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<String>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Snowflake"
        ],
        "spread": false,
        "optional": false,
        "name": "guildId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<String>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 320,
    "kind": "get",
    "name": "loaded",
    "memberof": "src/data-stores/mysql-store.js~MysqlStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/mysql-store.js~MysqlStore#loaded",
    "access": "public",
    "description": "Determine whether any data is loaded",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} Whether any data is currently loaded"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether any data is currently loaded"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "file",
    "name": "src/data-stores/object-store.js",
    "content": "import DataStore from \"./data-store\";\r\n\r\nconst _ = require(\"lodash\");\r\n\r\n/**\r\n * @extends DataStore\r\n */\r\nexport default class ObjectStore extends DataStore {\r\n    /**\r\n     * @param {Object} data\r\n     */\r\n    constructor(data) {\r\n        super();\r\n\r\n        /**\r\n         * @type {(Object|Null)}\r\n         * @private\r\n         */\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * Retrieve guild data\r\n     * @param {String} path\r\n     * @returns {Object}\r\n     */\r\n    get(path) {\r\n        return _.get(this.data, path);\r\n    }\r\n\r\n    /**\r\n     * Set guild data\r\n     * @param {String} path\r\n     * @param {*} value\r\n     */\r\n    set(path, value) {\r\n        _.set(this.data, path, value);\r\n    }\r\n\r\n    /**\r\n     * Merge guild data\r\n     * @param {String} path\r\n     * @param {*} value\r\n     */\r\n    merge(path, value) {\r\n        throw new Error(\"[ObjectStore.merge] Method not implemented.\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/data-stores/object-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 322,
    "kind": "variable",
    "name": "_",
    "memberof": "src/data-stores/object-store.js",
    "static": true,
    "longname": "src/data-stores/object-store.js~_",
    "access": "private",
    "export": false,
    "importPath": "discord-anvil/src/data-stores/object-store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 323,
    "kind": "class",
    "name": "ObjectStore",
    "memberof": "src/data-stores/object-store.js",
    "static": true,
    "longname": "src/data-stores/object-store.js~ObjectStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/data-stores/object-store.js",
    "importStyle": "ObjectStore",
    "description": "",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 324,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data-stores/object-store.js~ObjectStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/object-store.js~ObjectStore#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "data",
    "memberof": "src/data-stores/object-store.js~ObjectStore",
    "static": false,
    "longname": "src/data-stores/object-store.js~ObjectStore#data",
    "access": "private",
    "description": "",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Object",
        "Null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "get",
    "memberof": "src/data-stores/object-store.js~ObjectStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/object-store.js~ObjectStore#get",
    "access": "public",
    "description": "Retrieve guild data",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "set",
    "memberof": "src/data-stores/object-store.js~ObjectStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/object-store.js~ObjectStore#set",
    "access": "public",
    "description": "Set guild data",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "merge",
    "memberof": "src/data-stores/object-store.js~ObjectStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/object-store.js~ObjectStore#merge",
    "access": "public",
    "description": "Merge guild data",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 329,
    "kind": "file",
    "name": "src/data-stores/sqlite-store.js",
    "content": "import DataStore from \"./data-store\";\r\n\r\n/**\r\n * @extends DataStore\r\n */\r\nexport default class SqliteStore extends DataStore {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Retrieve guild data\r\n     * @param {String} path\r\n     * @returns {*}\r\n     */\r\n    get(path) {\r\n        throw new Error(\"[SqliteStore.get] Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Set guild data\r\n     * @param {String} path\r\n     * @param {*} value\r\n     */\r\n    set(path, value) {\r\n        throw new Error(\"[SqliteStore.set] Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Merge guild data\r\n     * @param {String} path\r\n     * @param {*} value\r\n     */\r\n    merge(path, value) {\r\n        throw new Error(\"[SqliteStore.merge] Method not implemented.\");\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/data-stores/sqlite-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 330,
    "kind": "class",
    "name": "SqliteStore",
    "memberof": "src/data-stores/sqlite-store.js",
    "static": true,
    "longname": "src/data-stores/sqlite-store.js~SqliteStore",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/data-stores/sqlite-store.js",
    "importStyle": "SqliteStore",
    "description": "",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 331,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data-stores/sqlite-store.js~SqliteStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/sqlite-store.js~SqliteStore#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "get",
    "memberof": "src/data-stores/sqlite-store.js~SqliteStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/sqlite-store.js~SqliteStore#get",
    "access": "public",
    "description": "Retrieve guild data",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "set",
    "memberof": "src/data-stores/sqlite-store.js~SqliteStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/sqlite-store.js~SqliteStore#set",
    "access": "public",
    "description": "Set guild data",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "merge",
    "memberof": "src/data-stores/sqlite-store.js~SqliteStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data-stores/sqlite-store.js~SqliteStore#merge",
    "access": "public",
    "description": "Merge guild data",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 335,
    "kind": "file",
    "name": "src/emoji-ui/emoji-button.js",
    "content": "export default class EmojiButton {\r\n    /**\r\n     * @param {String} emoji\r\n     * @param {Function} clickHandler\r\n     */\r\n    constructor(emoji, clickHandler) {\r\n        /**\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.emoji = emoji;\r\n\r\n        /**\r\n         * @type {Function}\r\n         * @readonly\r\n         */\r\n        this.handle = clickHandler;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/emoji-ui/emoji-button.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 336,
    "kind": "class",
    "name": "EmojiButton",
    "memberof": "src/emoji-ui/emoji-button.js",
    "static": true,
    "longname": "src/emoji-ui/emoji-button.js~EmojiButton",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/emoji-ui/emoji-button.js",
    "importStyle": "EmojiButton",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 337,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/emoji-ui/emoji-button.js~EmojiButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/emoji-ui/emoji-button.js~EmojiButton#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "emoji",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "clickHandler",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "emoji",
    "memberof": "src/emoji-ui/emoji-button.js~EmojiButton",
    "static": false,
    "longname": "src/emoji-ui/emoji-button.js~EmojiButton#emoji",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 339,
    "kind": "member",
    "name": "handle",
    "memberof": "src/emoji-ui/emoji-button.js~EmojiButton",
    "static": false,
    "longname": "src/emoji-ui/emoji-button.js~EmojiButton#handle",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 340,
    "kind": "file",
    "name": "src/emoji-ui/emoji-menu-manager.js",
    "content": "export default class EmojiMenuManager {\r\n    /**\r\n     * @param {Discord.Client} client\r\n     */\r\n    constructor(client) {\r\n        /**\r\n         * @type {Discord.Client}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.client = client;\r\n\r\n        /**\r\n         * @type {Array}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.awaiting = [];\r\n\r\n        this.client.on(\"messageReactionAdd\", (reaction, user) => {\r\n            if (!user.bot) {\r\n                for (let i = 0; i < this.awaiting.length; i++) {\r\n                    if (this.awaiting[i].messageId === reaction.message.id) {\r\n                        for (let buttonIndex = 0; buttonIndex < this.awaiting[i].menu.buttons.length; buttonIndex++) {\r\n                            if (this.awaiting[i].menu.buttons[buttonIndex].emoji === reaction.emoji.name) {\r\n                                this.awaiting[i].menu.buttons[buttonIndex].handle(reaction.message, user);\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {*} channel\r\n     * @param {EmojiMenu} menu\r\n     */\r\n    async show(channel, menu) {\r\n        const sentMessage = await channel.send(menu.content);\r\n\r\n        for (let i = 0; i < menu.buttons.length; i++) {\r\n            await sentMessage.react(menu.buttons[i].emoji);\r\n        }\r\n\r\n        this.awaiting.push({\r\n            menu: menu,\r\n            channel: channel,\r\n            messageId: sentMessage.id\r\n        });\r\n\r\n        return sentMessage;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/emoji-ui/emoji-menu-manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 341,
    "kind": "class",
    "name": "EmojiMenuManager",
    "memberof": "src/emoji-ui/emoji-menu-manager.js",
    "static": true,
    "longname": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/emoji-ui/emoji-menu-manager.js",
    "importStyle": "EmojiMenuManager",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 342,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "Discord.Client"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 343,
    "kind": "member",
    "name": "client",
    "memberof": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager",
    "static": false,
    "longname": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager#client",
    "access": "private",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Discord.Client"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 344,
    "kind": "member",
    "name": "awaiting",
    "memberof": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager",
    "static": false,
    "longname": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager#awaiting",
    "access": "private",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "show",
    "memberof": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/emoji-ui/emoji-menu-manager.js~EmojiMenuManager#show",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EmojiMenu"
        ],
        "spread": false,
        "optional": false,
        "name": "menu",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "file",
    "name": "src/emoji-ui/emoji-menu.js",
    "content": "export default class EmojiMenu {\r\n    /**\r\n     * @param {Array<EmojiButton>} buttons\r\n     * @param {String} content\r\n     */\r\n    constructor(buttons, content) {\r\n        /**\r\n         * @type {Array<EmojiButton>}\r\n         * @readonly\r\n         */\r\n        this.buttons = buttons;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.content = content;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/emoji-ui/emoji-menu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 347,
    "kind": "class",
    "name": "EmojiMenu",
    "memberof": "src/emoji-ui/emoji-menu.js",
    "static": true,
    "longname": "src/emoji-ui/emoji-menu.js~EmojiMenu",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/emoji-ui/emoji-menu.js",
    "importStyle": "EmojiMenu",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 348,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/emoji-ui/emoji-menu.js~EmojiMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/emoji-ui/emoji-menu.js~EmojiMenu#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<EmojiButton>"
        ],
        "spread": false,
        "optional": false,
        "name": "buttons",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "buttons",
    "memberof": "src/emoji-ui/emoji-menu.js~EmojiMenu",
    "static": false,
    "longname": "src/emoji-ui/emoji-menu.js~EmojiMenu#buttons",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<EmojiButton>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "content",
    "memberof": "src/emoji-ui/emoji-menu.js~EmojiMenu",
    "static": false,
    "longname": "src/emoji-ui/emoji-menu.js~EmojiMenu#content",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 351,
    "kind": "file",
    "name": "src/events/command-executed-event.js",
    "content": "export default class CommandExecutedEvent {\r\n    /**\r\n     * @param {Command} command\r\n     * @param {CommandExecutionContext} context\r\n     */\r\n    constructor(command, context) {\r\n        /**\r\n         * @type {Command}\r\n         */\r\n        this.command = command;\r\n\r\n        /**\r\n         * @type {CommandExecutionContext}\r\n         */\r\n        this.context = context;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/events/command-executed-event.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 352,
    "kind": "class",
    "name": "CommandExecutedEvent",
    "memberof": "src/events/command-executed-event.js",
    "static": true,
    "longname": "src/events/command-executed-event.js~CommandExecutedEvent",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/events/command-executed-event.js",
    "importStyle": "CommandExecutedEvent",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 353,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/events/command-executed-event.js~CommandExecutedEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/command-executed-event.js~CommandExecutedEvent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "Command"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CommandExecutionContext"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 354,
    "kind": "member",
    "name": "command",
    "memberof": "src/events/command-executed-event.js~CommandExecutedEvent",
    "static": false,
    "longname": "src/events/command-executed-event.js~CommandExecutedEvent#command",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Command"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "context",
    "memberof": "src/events/command-executed-event.js~CommandExecutedEvent",
    "static": false,
    "longname": "src/events/command-executed-event.js~CommandExecutedEvent#context",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "CommandExecutionContext"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 356,
    "kind": "file",
    "name": "src/events/command-will-execute-event.js",
    "content": "export default class CommandWillExecuteEvent {\r\n    /**\r\n     * @param {Command} command\r\n     * @param {CommandExecutionContext} context\r\n     * @param {Function} prevent\r\n     */\r\n    constructor(command, context, prevent) {\r\n        /**\r\n         * @type {Command}\r\n         */\r\n        this.command = command;\r\n\r\n        /**\r\n         * @type {CommandExecutionContext}\r\n         */\r\n        this.context = context;\r\n\r\n        /**\r\n         * @type {Function}\r\n         */\r\n        this.prevent = prevent;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/events/command-will-execute-event.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 357,
    "kind": "class",
    "name": "CommandWillExecuteEvent",
    "memberof": "src/events/command-will-execute-event.js",
    "static": true,
    "longname": "src/events/command-will-execute-event.js~CommandWillExecuteEvent",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/events/command-will-execute-event.js",
    "importStyle": "CommandWillExecuteEvent",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 358,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/events/command-will-execute-event.js~CommandWillExecuteEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/command-will-execute-event.js~CommandWillExecuteEvent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "Command"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CommandExecutionContext"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "prevent",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "command",
    "memberof": "src/events/command-will-execute-event.js~CommandWillExecuteEvent",
    "static": false,
    "longname": "src/events/command-will-execute-event.js~CommandWillExecuteEvent#command",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Command"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 360,
    "kind": "member",
    "name": "context",
    "memberof": "src/events/command-will-execute-event.js~CommandWillExecuteEvent",
    "static": false,
    "longname": "src/events/command-will-execute-event.js~CommandWillExecuteEvent#context",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "CommandExecutionContext"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 361,
    "kind": "member",
    "name": "prevent",
    "memberof": "src/events/command-will-execute-event.js~CommandWillExecuteEvent",
    "static": false,
    "longname": "src/events/command-will-execute-event.js~CommandWillExecuteEvent#prevent",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 362,
    "kind": "file",
    "name": "src/features/feature-manager.js",
    "content": "// import Collection from \"../collections/collection\";\r\n\r\n// TODO: Implement the Collection class.\r\nexport default class FeatureManager /* extends Collection */ {\r\n    /**\r\n     * @param {Bot} bot\r\n     * @param {Array<Feature>} features\r\n     */\r\n    constructor(bot, features = []) {\r\n        // super(features);\r\n\r\n        /**\r\n         * @type {Array<Feature>}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.features = features;\r\n\r\n        /**\r\n         * @type {Bot}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.bot = bot;\r\n    }\r\n\r\n    /**\r\n     * Enable a feature\r\n     * @param {Feature} feature\r\n     * @return {Boolean}\r\n     */\r\n    enable(feature) {\r\n        if (feature.canEnable(this.bot)) {\r\n            feature.enabled(this.bot);\r\n            feature.isEnabled = true;\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Enable multiple features at once\r\n     * @param {Array<Feature>} features\r\n     * @return {Number}\r\n     */\r\n    enableMultiple(features) {\r\n        let totalEnabled = 0;\r\n\r\n        for (let i = 0; i < features.length; i++) {\r\n            if (this.enable(features[i])) {\r\n                totalEnabled++;\r\n            }\r\n        }\r\n\r\n        return totalEnabled;\r\n    }\r\n\r\n    /**\r\n     * Enable all the currently registered features\r\n     * @return {Number}\r\n     */\r\n    enableAll() {\r\n        return this.enableMultiple(this.features);\r\n    }\r\n\r\n    /**\r\n     * Disable a feature\r\n     * @param {Feature} feature\r\n     */\r\n    disable(feature) {\r\n        feature.disabled(this.bot);\r\n        feature.isEnabled = false;\r\n    }\r\n\r\n    /**\r\n     * Disable multiple features at once\r\n     * @param {Array<Feature>} features\r\n     */\r\n    disableMultiple(features) {\r\n        for (let i = 0; i < features.length; i++) {\r\n            this.disable(features[i], this.bot);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disable all the currently registered features\r\n     */\r\n    disableAll() {\r\n        this.disableMultiple(this.features);\r\n    }\r\n\r\n    /**\r\n     * Reload all currently registered and enabled features\r\n     * @return {Number}\r\n     */\r\n    reloadAll() {\r\n        this.disableAll();\r\n\r\n        return this.enableAll();\r\n    }\r\n\r\n    // TODO: Replace by Collection's native methods\r\n    /**\r\n     * Register a feature\r\n     * @param {Feature} feature\r\n     */\r\n    register(feature) {\r\n        this.features.push(feature);\r\n    }\r\n\r\n    /**\r\n     * Register multiple features at once\r\n     * @param {Array<Feature>} features\r\n     */\r\n    registerMultiple(features) {\r\n        for (let i = 0; i < features.length; i++) {\r\n            this.register(features[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determine whether a feature is registered\r\n     * @param {String} key\r\n     * @return {Boolean}\r\n     */\r\n    isRegistered(key) {\r\n        return this.get(key) != null;\r\n    }\r\n\r\n    /**\r\n     * Determine whether a feature is enabled\r\n     * @param {String} key\r\n     * @return {Boolean}\r\n     */\r\n    isEnabled(key) {\r\n        return this.get(key).isEnabled;\r\n    }\r\n\r\n    /**\r\n     * @param {String} key\r\n     * @return {(Feature|Null)}\r\n     */\r\n    get(key) {\r\n        for (let i = 0; i < this.features.length; i++) {\r\n            if (this.features[i].key === key) {\r\n                return this.features[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/features/feature-manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 363,
    "kind": "class",
    "name": "FeatureManager",
    "memberof": "src/features/feature-manager.js",
    "static": true,
    "longname": "src/features/feature-manager.js~FeatureManager",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/features/feature-manager.js",
    "importStyle": "FeatureManager",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 364,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Bot"
        ],
        "spread": false,
        "optional": false,
        "name": "bot",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<Feature>"
        ],
        "spread": false,
        "optional": false,
        "name": "features",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 365,
    "kind": "member",
    "name": "features",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#features",
    "access": "private",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Feature>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 366,
    "kind": "member",
    "name": "bot",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#bot",
    "access": "private",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Bot"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "enable",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#enable",
    "access": "public",
    "description": "Enable a feature",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "enableMultiple",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#enableMultiple",
    "access": "public",
    "description": "Enable multiple features at once",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Feature>"
        ],
        "spread": false,
        "optional": false,
        "name": "features",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "enableAll",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#enableAll",
    "access": "public",
    "description": "Enable all the currently registered features",
    "lineNumber": 64,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "disable",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#disable",
    "access": "public",
    "description": "Disable a feature",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "disableMultiple",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#disableMultiple",
    "access": "public",
    "description": "Disable multiple features at once",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Feature>"
        ],
        "spread": false,
        "optional": false,
        "name": "features",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "disableAll",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#disableAll",
    "access": "public",
    "description": "Disable all the currently registered features",
    "lineNumber": 90,
    "params": [],
    "return": null
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "reloadAll",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#reloadAll",
    "access": "public",
    "description": "Reload all currently registered and enabled features",
    "lineNumber": 98,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "register",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#register",
    "access": "public",
    "description": "Register a feature",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 375,
    "kind": "method",
    "name": "registerMultiple",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#registerMultiple",
    "access": "public",
    "description": "Register multiple features at once",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Feature>"
        ],
        "spread": false,
        "optional": false,
        "name": "features",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "isRegistered",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#isRegistered",
    "access": "public",
    "description": "Determine whether a feature is registered",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "isEnabled",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#isEnabled",
    "access": "public",
    "description": "Determine whether a feature is enabled",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "get",
    "memberof": "src/features/feature-manager.js~FeatureManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature-manager.js~FeatureManager#get",
    "access": "public",
    "description": "",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Feature",
        "Null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 379,
    "kind": "file",
    "name": "src/features/feature.js",
    "content": "export default class Feature {\r\n    /**\r\n     * @param {String} name The name of the feature\r\n     * @param {String} key\r\n     * @param {String} description The description of the feature\r\n     */\r\n    constructor(name, key, description) {\r\n        /**\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.name = name;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.description = description;\r\n    }\r\n\r\n    // TODO: Throw methods not implemented\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/features/feature.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 380,
    "kind": "class",
    "name": "Feature",
    "memberof": "src/features/feature.js",
    "static": true,
    "longname": "src/features/feature.js~Feature",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/features/feature.js",
    "importStyle": "Feature",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 381,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/features/feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/features/feature.js~Feature#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the feature"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The description of the feature"
      }
    ]
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "name",
    "memberof": "src/features/feature.js~Feature",
    "static": false,
    "longname": "src/features/feature.js~Feature#name",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 383,
    "kind": "member",
    "name": "key",
    "memberof": "src/features/feature.js~Feature",
    "static": false,
    "longname": "src/features/feature.js~Feature#key",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 384,
    "kind": "member",
    "name": "description",
    "memberof": "src/features/feature.js~Feature",
    "static": false,
    "longname": "src/features/feature.js~Feature#description",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 385,
    "kind": "file",
    "name": "src/index.js",
    "content": "module.exports = {\r\n    // Commands\r\n    CommandArgumentParser: require(\"./commands/command-argument-parser\").default,\r\n    CommandExecutionContext: require(\"./commands/command-execution-context\").default,\r\n    CommandLoader: require(\"./commands/command-loader\").default,\r\n    CommandManager: require(\"./commands/command-manager\").default,\r\n    CommandParser: require(\"./commands/command-parser\").default,\r\n    Command: require(\"./commands/command\").default,\r\n\r\n    // Console\r\n    ConsoleInterface: require(\"./console/console-interface\").default,\r\n    ConsoleCommand: require(\"./console/console-command\").default,\r\n\r\n    // Core\r\n    AccessLevelType: require(\"./commands/access-level-type\").default,\r\n    Bot: require(\"./core/bot\").default,\r\n    EditableMessage: require(\"./message/editable-message\").default,\r\n    EmbedBuilder: require(\"./message/embed-builder\").default,\r\n    Log: require(\"./core/log\").default,\r\n    MessageBuilder: require(\"./message/message-builder\").default,\r\n    RGB: require(\"./misc/rgb\").default,\r\n    RGBA: require(\"./misc/rgba\").default,\r\n    Settings: require(\"./core/settings\").default,\r\n    TimeParser: require(\"./time/time-parser\").default,\r\n    TimeSuffixType: require(\"./time/time-suffix-type\").default,\r\n    UserConfig: require(\"./core/user-config\").default,\r\n    Utils: require(\"./core/utils\").default,\r\n    Permission: require(\"./core/permission\").default,\r\n    ChatEnvironment: require(\"./core/chat-environment\").default,\r\n\r\n    // Collections\r\n    Collection: require(\"./collections/collection\").default,\r\n    EmojiCollection: require(\"./collections/emoji-collection\").default,\r\n\r\n    // Emoji UI\r\n    EmojiButton: require(\"./emoji-ui/emoji-button\").default,\r\n    EmojiMenuManager: require(\"./emoji-ui/emoji-menu-manager\").default,\r\n    EmojiMenu: require(\"./emoji-ui/emoji-menu\").default,\r\n\r\n    // Events\r\n    CommandWillExecuteEvent: require(\"./events/command-will-execute-event\").default,\r\n    CommandExecutedEvent: require(\"./events/command-executed-event\").default,\r\n\r\n    // Features\r\n    FeatureManager: require(\"./features/feature-manager\").default,\r\n    Feature: require(\"./features/feature\").default,\r\n\r\n    // Data Stores\r\n    DataStore: require(\"./data-stores/data-store\").default,\r\n    ObjectStore: require(\"./data-stores/object-store\").default,\r\n    JsonStore: require(\"./data-stores/json-store\").default,\r\n    SqliteStore: require(\"./data-stores/sqlite-store\").default,\r\n    MysqlStore: require(\"./data-stores/mysql-store\").default,\r\n\r\n    // Auth Stores\r\n    CommandAuthStore: require(\"./commands/command-auth-store\").default,\r\n    ObjectAuthStore: require(\"./commands/object-auth-store\").default,\r\n    JsonAuthStore: require(\"./commands/json-auth-store\").default\r\n};\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 386,
    "kind": "file",
    "name": "src/message/editable-message.js",
    "content": "import Log from \"../core/log\";\r\n\r\nconst Discord = require(\"discord.js\");\r\n\r\nexport default class EditableMessage {\r\n    /**\r\n     * @param {Discord.Message} message\r\n     */\r\n    constructor(message) {\r\n        if (message.embeds.length === 0) {\r\n            Log.error(\"[EditableMessage] Message parameter must contain embeds\");\r\n        }\r\n\r\n        /**\r\n         * @type {Discord.Message}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.message = message;\r\n    }\r\n\r\n    /**\r\n     * Edit an already sent message\r\n     * @param {String} message\r\n     * @param {String} title\r\n     * @param {String} color\r\n     * @param {String} thumbnailUrl\r\n     * @param {String} [image=\"\"]\r\n     * @returns {Promise<Discord.Message>}\r\n     */\r\n    async edit(message, title = \"\", color = \"RANDOM\", thumbnailUrl = \"\", image = \"\") {\r\n        return this.message.edit(\"\", new Discord.RichEmbed()\r\n            .setColor(color)\r\n            .setDescription(message)\r\n            .setAuthor(title, thumbnailUrl)\r\n            .setImage(image));\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/message/editable-message.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "variable",
    "name": "Discord",
    "memberof": "src/message/editable-message.js",
    "static": true,
    "longname": "src/message/editable-message.js~Discord",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/message/editable-message.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 388,
    "kind": "class",
    "name": "EditableMessage",
    "memberof": "src/message/editable-message.js",
    "static": true,
    "longname": "src/message/editable-message.js~EditableMessage",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/message/editable-message.js",
    "importStyle": "EditableMessage",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 389,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/message/editable-message.js~EditableMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/editable-message.js~EditableMessage#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Discord.Message"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 390,
    "kind": "member",
    "name": "message",
    "memberof": "src/message/editable-message.js~EditableMessage",
    "static": false,
    "longname": "src/message/editable-message.js~EditableMessage#message",
    "access": "private",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Discord.Message"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "edit",
    "memberof": "src/message/editable-message.js~EditableMessage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/message/editable-message.js~EditableMessage#edit",
    "access": "public",
    "description": "Edit an already sent message",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Discord.Message>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "thumbnailUrl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "image",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Discord.Message>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 392,
    "kind": "file",
    "name": "src/message/embed-builder.js",
    "content": "const Discord = require(\"discord.js\");\r\n\r\nexport default class EmbedBuilder {\r\n    constructor() {\r\n        /**\r\n         * @type {Discord.RichEmbed}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.embed = new Discord.RichEmbed();\r\n    }\r\n\r\n    /**\r\n     * Set the color of the embed\r\n     * @param {String} color\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    color(color) {\r\n        this.embed.setColor(color);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the title of the embed\r\n     * @param {String} title\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    title(title) {\r\n        this.embed.setAuthor(title, this.embed.author ? this.embed.author.icon_url : null);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {String} url\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    titleIcon(url) {\r\n        this.embed.setAuthor(this.embed.author ? this.embed.author.name : null, url);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the thumbnail image of the embed\r\n     * @param {String} url\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    thumbnail(url) {\r\n        this.embed.setThumbnail(url);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the footer text of the embed\r\n     * @param {String} text\r\n     * @param {String} icon\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    footer(text, icon) {\r\n        this.embed.setFooter(text, icon);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the image of the embed\r\n     * @param {String} url\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    image(url) {\r\n        this.embed.setImage(url);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the text of the embed\r\n     * @todo Limit text to Discord's embed char limit\r\n     * @param {string} text\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    text(text) {\r\n        this.embed.setDescription(text);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add a field to the embed\r\n     * @param {String} title\r\n     * @param {*} value\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    field(title, value) {\r\n        this.embed.addField(title, value);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Convert the embed to a RichEmbed\r\n     * @returns {Discord.RichEmbed}\r\n     */\r\n    build() {\r\n        return this.embed;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} obj\r\n     * @returns {EmbedBuilder}\r\n     */\r\n    static fromObject(obj) {\r\n        const result = new EmbedBuilder();\r\n\r\n        if (!obj.text) {\r\n            throw new Error(\"[EmbedBuilder.fromObject] Text cannot be empty or null\");\r\n        }\r\n        else {\r\n            result.text(obj.text);\r\n        }\r\n\r\n        if (obj.image) {\r\n            result.image(obj.image);\r\n        }\r\n\r\n        if (obj.color) {\r\n            result.color(obj.color);\r\n        }\r\n\r\n        if (obj.title) {\r\n            result.title(obj.title);\r\n        }\r\n\r\n        if (obj.titleIcon) {\r\n            result.titleIcon(obj.titleIcon);\r\n        }\r\n\r\n        if (obj.footer) {\r\n            result.footer(obj.footer.text, obj.footer.icon);\r\n        }\r\n\r\n        if (obj.thumbnail) {\r\n            result.thumbnail(obj.thumbnail);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} sections\r\n     * @param {String} color\r\n     * @return {EmbedBuilder}\r\n     */\r\n    static sections(sections, color = null) {\r\n        const result = new EmbedBuilder();\r\n\r\n        for (let i = 0; i < Object.keys(sections).length; i++) {\r\n            result.field(Object.keys(sections)[i], sections[Object.keys(sections)[i]]);\r\n        }\r\n\r\n        if (color) {\r\n            result.color(color);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/message/embed-builder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 393,
    "kind": "variable",
    "name": "Discord",
    "memberof": "src/message/embed-builder.js",
    "static": true,
    "longname": "src/message/embed-builder.js~Discord",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/message/embed-builder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 394,
    "kind": "class",
    "name": "EmbedBuilder",
    "memberof": "src/message/embed-builder.js",
    "static": true,
    "longname": "src/message/embed-builder.js~EmbedBuilder",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/message/embed-builder.js",
    "importStyle": "EmbedBuilder",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 395,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 396,
    "kind": "member",
    "name": "embed",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#embed",
    "access": "private",
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Discord.RichEmbed"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "color",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#color",
    "access": "public",
    "description": "Set the color of the embed",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "title",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#title",
    "access": "public",
    "description": "Set the title of the embed",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "titleIcon",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#titleIcon",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "thumbnail",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#thumbnail",
    "access": "public",
    "description": "Set the thumbnail image of the embed",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 401,
    "kind": "method",
    "name": "footer",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#footer",
    "access": "public",
    "description": "Set the footer text of the embed",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "icon",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "image",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#image",
    "access": "public",
    "description": "Set the image of the embed",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "text",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#text",
    "access": "public",
    "description": "Set the text of the embed",
    "lineNumber": 85,
    "todo": [
      "Limit text to Discord's embed char limit"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "field",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#field",
    "access": "public",
    "description": "Add a field to the embed",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "build",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/embed-builder.js~EmbedBuilder#build",
    "access": "public",
    "description": "Convert the embed to a RichEmbed",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Discord.RichEmbed}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Discord.RichEmbed"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "fromObject",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/message/embed-builder.js~EmbedBuilder.fromObject",
    "access": "public",
    "description": "",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EmbedBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 407,
    "kind": "method",
    "name": "sections",
    "memberof": "src/message/embed-builder.js~EmbedBuilder",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/message/embed-builder.js~EmbedBuilder.sections",
    "access": "public",
    "description": "",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "sections",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EmbedBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 408,
    "kind": "file",
    "name": "src/message/message-builder.js",
    "content": "export default class MessageBuilder {\r\n    /**\r\n     * @param {string} [startingString=\"\"]\r\n     */\r\n    constructor(startingString = \"\") {\r\n        this.message = startingString;\r\n    }\r\n\r\n    /**\r\n     * @param {string} string\r\n     * @returns {MessageBuilder}\r\n     */\r\n    add(string) {\r\n        this.message += string;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {(String|Null)} language\r\n     * @param {(String|Null)} [code=null]\r\n     * @returns {MessageBuilder}\r\n     */\r\n    codeBlock(language = null, code = null) {\r\n        let result = \"```\";\r\n\r\n        if (language !== null) {\r\n            result += `${language}\\n`;\r\n        }\r\n\r\n        if (code !== null) {\r\n            result += `${code}\\n\\`\\`\\``;\r\n        }\r\n\r\n        return this.add(result);\r\n    }\r\n\r\n    /**\r\n     * @param {(string|null)} code\r\n     * @returns {MessageBuilder}\r\n     */\r\n    code(code = null) {\r\n        if (code === null) {\r\n            return this.add(\"`\");\r\n        }\r\n\r\n        return this.add(`\\`${code}\\``);\r\n    }\r\n\r\n    /**\r\n     * @param {string} text\r\n     * @returns {MessageBuilder}\r\n     */\r\n    italic(text) {\r\n        return this.add(`*${text}*`);\r\n    }\r\n\r\n    /**\r\n     * @param {string} text\r\n     * @returns {MessageBuilder}\r\n     */\r\n    bold(text) {\r\n        return this.add(`**${text}**`);\r\n    }\r\n\r\n    /**\r\n     * @param {string} text\r\n     * @returns {MessageBuilder}\r\n     */\r\n    underlined(text) {\r\n        return this.add(`__${text}__`);\r\n    }\r\n\r\n    /**\r\n     * @returns {MessageBuilder}\r\n     */\r\n    line() {\r\n        return this.add(\"\\n\");\r\n    }\r\n\r\n    /**\r\n     * @param {string} emoji\r\n     * @returns {MessageBuilder}\r\n     */\r\n    emoji(emoji) {\r\n        return this.add(`:${emoji}:`);\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    build() {\r\n        return this.message;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/message/message-builder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 409,
    "kind": "class",
    "name": "MessageBuilder",
    "memberof": "src/message/message-builder.js",
    "static": true,
    "longname": "src/message/message-builder.js~MessageBuilder",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/message/message-builder.js",
    "importStyle": "MessageBuilder",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 410,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "startingString",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "message",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#message",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "method",
    "name": "add",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#add",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MessageBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MessageBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "codeBlock",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#codeBlock",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MessageBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Null"
        ],
        "spread": false,
        "optional": false,
        "name": "language",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Null"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "code",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MessageBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 415,
    "kind": "method",
    "name": "code",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#code",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MessageBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MessageBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 416,
    "kind": "method",
    "name": "italic",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#italic",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MessageBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MessageBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 417,
    "kind": "method",
    "name": "bold",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#bold",
    "access": "public",
    "description": "",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MessageBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MessageBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 418,
    "kind": "method",
    "name": "underlined",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#underlined",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MessageBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MessageBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 419,
    "kind": "method",
    "name": "line",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#line",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MessageBuilder}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MessageBuilder"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 420,
    "kind": "method",
    "name": "emoji",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#emoji",
    "access": "public",
    "description": "",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MessageBuilder}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "emoji",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MessageBuilder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 421,
    "kind": "method",
    "name": "build",
    "memberof": "src/message/message-builder.js~MessageBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message/message-builder.js~MessageBuilder#build",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 422,
    "kind": "file",
    "name": "src/misc/rgb.js",
    "content": "export default class RGB {\r\n    /**\r\n     * @param {Number} red\r\n     * @param {Number} green\r\n     * @param {Number} blue\r\n     */\r\n    constructor(red, green, blue) {\r\n        /**\r\n         * @type {Number}\r\n         * @readonly\r\n         */\r\n        this.red = red;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @readonly\r\n         */\r\n        this.green = green;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @readonly\r\n         */\r\n        this.blue = blue;\r\n    }\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    toString() {\r\n        return `${this.red}, ${this.green}, ${this.blue}`;\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/misc/rgb.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 423,
    "kind": "class",
    "name": "RGB",
    "memberof": "src/misc/rgb.js",
    "static": true,
    "longname": "src/misc/rgb.js~RGB",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/misc/rgb.js",
    "importStyle": "RGB",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 424,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/misc/rgb.js~RGB",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/misc/rgb.js~RGB#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "red",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "green",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "blue",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 425,
    "kind": "member",
    "name": "red",
    "memberof": "src/misc/rgb.js~RGB",
    "static": false,
    "longname": "src/misc/rgb.js~RGB#red",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 426,
    "kind": "member",
    "name": "green",
    "memberof": "src/misc/rgb.js~RGB",
    "static": false,
    "longname": "src/misc/rgb.js~RGB#green",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 427,
    "kind": "member",
    "name": "blue",
    "memberof": "src/misc/rgb.js~RGB",
    "static": false,
    "longname": "src/misc/rgb.js~RGB#blue",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 428,
    "kind": "method",
    "name": "toString",
    "memberof": "src/misc/rgb.js~RGB",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/misc/rgb.js~RGB#toString",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 429,
    "kind": "file",
    "name": "src/misc/rgba.js",
    "content": "import RGB from \"./rgb\";\r\n\r\n/**\r\n * @extends RGB\r\n */\r\nexport default class RGBA extends RGB {\r\n    /**\r\n     * @param {Number} red\r\n     * @param {Number} green\r\n     * @param {Number} blue\r\n     * @param {Number} alpha\r\n     */\r\n    constructor(red, green, blue, alpha) {\r\n        super(red, green, blue);\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @readonly\r\n         */\r\n        this.alpha = alpha;\r\n    }\r\n\r\n    /**\r\n     * @returns {String}\r\n     */\r\n    toString() {\r\n        return `${this.red}, ${this.green}, ${this.blue}, ${this.alpha}`;\r\n    }\r\n\r\n    /**\r\n     * @returns {Object}\r\n     */\r\n    toObject() {\r\n        return {\r\n            red: this.red,\r\n            green: this.green,\r\n            blue: this.blue,\r\n            alpha: this.alpha\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param {String} hex\r\n     * @returns {(RGBA|Null)}\r\n     */\r\n    static fromHex(hex) {\r\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n        // TODO: Also get the Alpha value (instead of being hardcoded).\r\n        return result ? new RGBA(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16), 255) : null;\r\n    }\r\n\r\n    // TODO: Support for shorthand hex:\r\n    /* function hexToRgb(hex) {\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    } */\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/misc/rgba.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 430,
    "kind": "class",
    "name": "RGBA",
    "memberof": "src/misc/rgba.js",
    "static": true,
    "longname": "src/misc/rgba.js~RGBA",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/misc/rgba.js",
    "importStyle": "RGBA",
    "description": "",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 431,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/misc/rgba.js~RGBA",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/misc/rgba.js~RGBA#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "red",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "green",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "blue",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "alpha",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 432,
    "kind": "member",
    "name": "alpha",
    "memberof": "src/misc/rgba.js~RGBA",
    "static": false,
    "longname": "src/misc/rgba.js~RGBA#alpha",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 433,
    "kind": "method",
    "name": "toString",
    "memberof": "src/misc/rgba.js~RGBA",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/misc/rgba.js~RGBA#toString",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "toObject",
    "memberof": "src/misc/rgba.js~RGBA",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/misc/rgba.js~RGBA#toObject",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "fromHex",
    "memberof": "src/misc/rgba.js~RGBA",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/misc/rgba.js~RGBA.fromHex",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{(RGBA|Null)}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "hex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RGBA",
        "Null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 436,
    "kind": "file",
    "name": "src/test/tests.js",
    "content": "import Utils from \"../core/utils\";\r\nimport RGB from \"../misc/rgb\";\r\nimport RGBA from \"../misc/rgba\";\r\nimport Collection from \"../collections/collection\";\r\nimport ObjectStore from \"../data-stores/object-store\";\r\n\r\nconst { expect } = require(\"chai\");\r\n\r\nconst subjects = {\r\n    ids: [\r\n        \"<@285578743324606482>\",\r\n        \"<#432269407654248459>\",\r\n        \"285578743324606482\"\r\n    ],\r\n\r\n    rgb: new RGB(5, 10, 15),\r\n    rgba: new RGBA(5, 10, 15, 20),\r\n\r\n    collection: new Collection([\"hello\", \"it's me\", {\r\n        name: \"John Doe\"\r\n    }]),\r\n\r\n    objAdapter: new ObjectStore({\r\n        person: {\r\n            doe: {\r\n                name: \"John Doe\"\r\n            }\r\n        }\r\n    })\r\n};\r\n\r\ndescribe(\"Utils.resolveId()\", () => {\r\n    it(\"should return the resolved ids\", () => {\r\n        // Review\r\n        for (let i = 0; i < subjects.ids.length; i++) {\r\n            const result = Utils.resolveId(subjects.ids[i]);\r\n\r\n            expect(result).to.be.an(\"string\");\r\n            expect(result).to.have.lengthOf(18);\r\n        }\r\n    });\r\n});\r\n\r\ndescribe(\"Utils.timeAgo()\", () => {\r\n    it(\"should return a string\", () => {\r\n        expect(Utils.timeAgo(Date.now())).to.be.an(\"string\");\r\n    });\r\n});\r\n\r\ndescribe(\"Utils.getRandomInt()\", () => {\r\n    it(\"should return a random number\", () => {\r\n        const result = Utils.getRandomInt(0, 2);\r\n\r\n        expect(result).to.be.an(\"number\");\r\n        // TODO: Check to be the number either 0 or 1\r\n    });\r\n});\r\n\r\ndescribe(\"Utils.translateState()\", () => {\r\n    it(\"should return the translated state\", () => {\r\n        const subjects = [\r\n            true,\r\n            1,\r\n            \"y\",\r\n            \"yes\",\r\n            \"on\"\r\n        ];\r\n\r\n        for (let i = 0; i < subjects.length; i++) {\r\n            const result = Utils.translateState(subjects[i]);\r\n\r\n            expect(result).to.be.an(\"boolean\");\r\n            expect(result).to.be.equal(true);\r\n        }\r\n    });\r\n});\r\n\r\ndescribe(\"Utils.timeFromNow()\", () => {\r\n    it(\"should time from now in milliseconds\", () => {\r\n        const result = Utils.timeFromNow(0, 0, 50);\r\n\r\n        expect(result).to.be.an(\"number\");\r\n        expect(result.toString()).to.have.lengthOf(13);\r\n    });\r\n});\r\n\r\ndescribe(\"Utils.shuffle()\", () => {\r\n    it(\"should shuffle an array\", () => {\r\n        const result = Utils.shuffle([\"hello\", \"my\", \"name\", \"is\", \"john doe\"]);\r\n\r\n        expect(result).to.be.an(\"array\");\r\n        expect(result.join(\" \")).to.not.equal(\"hello my name is john doe\");\r\n    });\r\n});\r\n\r\ndescribe(\"Utils.shuffle()\", () => {\r\n    it(\"should shuffle an array\", () => {\r\n        const result = Utils.shuffle([\"hello\", \"my\", \"name\", \"is\", \"john doe\"]);\r\n\r\n        expect(result).to.be.an(\"array\");\r\n        expect(result.join(\" \")).to.not.equal(\"hello my name is john doe\");\r\n    });\r\n});\r\n\r\ndescribe(\"RGB.toString()\", () => {\r\n    it(\"should return the RGB in string format\", () => {\r\n        const result = subjects.rgb.toString();\r\n\r\n        expect(result).to.be.an(\"string\");\r\n        expect(result).to.equal(\"5, 10, 15\");\r\n    });\r\n});\r\n\r\ndescribe(\"RGBA.toString()\", () => {\r\n    it(\"should return the RGBA in string format\", () => {\r\n        const result = subjects.rgba.toString();\r\n\r\n        expect(result).to.be.an(\"string\");\r\n        expect(result).to.equal(\"5, 10, 15, 20\");\r\n    });\r\n});\r\n\r\ndescribe(\"Collection.at()\", () => {\r\n    it(\"should return the item located in the specified index\", () => {\r\n        const result1 = subjects.collection.at(0);\r\n        const result2 = subjects.collection.at(1);\r\n\r\n        // Result 1\r\n        expect(result1).to.be.an(\"string\");\r\n        expect(result1).to.equal(\"hello\");\r\n\r\n        // Result 2\r\n        expect(result2).to.be.an(\"string\");\r\n        expect(result2).to.equal(\"it's me\");\r\n    });\r\n});\r\n\r\ndescribe(\"Collection.removeAt()\", () => {\r\n    it(\"should remove the item located in the specified index\", () => {\r\n        const result1 = subjects.collection.removeAt(0);\r\n        const result2 = subjects.collection.removeAt(5);\r\n\r\n        // Result 1\r\n        expect(result1).to.be.an(\"boolean\");\r\n        expect(result1).to.equal(true);\r\n        expect(subjects.collection.at(0)).to.be.an(\"string\");\r\n        expect(subjects.collection.at(0)).to.equal(\"it's me\");\r\n\r\n        // Result 2\r\n        expect(result2).to.be.an(\"boolean\");\r\n        expect(result2).to.equal(false);\r\n    });\r\n});\r\n\r\ndescribe(\"Collection.add()\", () => {\r\n    it(\"should add an item to the collection\", () => {\r\n        subjects.collection.add(\"john doe\");\r\n        expect(subjects.collection.at(0)).to.be.an(\"string\");\r\n        expect(subjects.collection.at(0)).to.equal(\"it's me\");\r\n        expect(subjects.collection.at(1)).to.be.an(\"object\");\r\n    });\r\n});\r\n\r\ndescribe(\"Collection.addUnique()\", () => {\r\n    it(\"should add an unique item\", () => {\r\n        const result1 = subjects.collection.addUnique(\"doe\");\r\n        const result2 = subjects.collection.addUnique(\"doe\");\r\n\r\n        // Result 1\r\n        expect(result1).to.be.an(\"boolean\");\r\n        expect(result1).to.equal(true);\r\n\r\n        // Result 2\r\n        expect(result2).to.be.an(\"boolean\");\r\n        expect(result2).to.equal(false);\r\n    });\r\n});\r\n\r\ndescribe(\"Collection.contains()\", () => {\r\n    it(\"should determine whether the collection contains an item\", () => {\r\n        const result1 = subjects.collection.contains(\"john doe\");\r\n        const result2 = subjects.collection.contains(\"nope\");\r\n\r\n        // Result 1\r\n        expect(result1).to.be.an(\"boolean\");\r\n        expect(result1).to.equal(true);\r\n\r\n        // Result 2\r\n        expect(result2).to.be.an(\"boolean\");\r\n        expect(result2).to.equal(false);\r\n    });\r\n});\r\n\r\ndescribe(\"Collection.find()\", () => {\r\n    it(\"should find an item by its property\", () => {\r\n        const result = subjects.collection.find(\"name\", \"John Doe\");\r\n\r\n        expect(result).to.be.an(\"object\");\r\n        expect(result.name).to.be.an(\"string\");\r\n        expect(result.name).to.equal(\"John Doe\");\r\n    });\r\n});\r\n\r\ndescribe(\"ObjectStore.get()\", () => {\r\n    it(\"should return the item in the specified path\", () => {\r\n        const result = subjects.objAdapter.get(\"person.doe\");\r\n\r\n        expect(result).to.be.an(\"object\");\r\n        expect(result.name).to.be.an(\"string\");\r\n        expect(result.name).to.equal(\"John Doe\");\r\n    });\r\n});\r\n\r\ndescribe(\"ObjectStore.set()\", () => {\r\n    it(\"should set data in the item at the specified path\", () => {\r\n        subjects.objAdapter.set(\"person.doe.name\", \"Doe John\");\r\n\r\n        const result = subjects.objAdapter.get(\"person.doe.name\");\r\n\r\n        expect(result).to.be.an(\"string\");\r\n        expect(result).to.equal(\"Doe John\");\r\n    });\r\n});\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/test/tests.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "variable",
    "name": "expect",
    "memberof": "src/test/tests.js",
    "static": true,
    "longname": "src/test/tests.js~expect",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/test/tests.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 438,
    "kind": "variable",
    "name": "subjects",
    "memberof": "src/test/tests.js",
    "static": true,
    "longname": "src/test/tests.js~subjects",
    "access": "public",
    "export": false,
    "importPath": "discord-anvil/src/test/tests.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"ids\": *, \"rgb\": *, \"rgba\": *, \"collection\": *, \"objAdapter\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 439,
    "kind": "file",
    "name": "src/time/time-parser.js",
    "content": "import TimeSuffixType from \"./time-suffix-type\";\r\nimport Utils from \"../core/utils\";\r\n\r\nexport default class TimeParser {\r\n    /**\r\n     * @param {String} timeString\r\n     */\r\n    constructor(timeString) {\r\n        /**\r\n         * @type {String}\r\n         * @private\r\n         * @readonly\r\n         */\r\n        this.timeString = timeString;\r\n    }\r\n\r\n    /**\r\n     * @returns {*}\r\n     */\r\n    getMatch() {\r\n        return /^([0-9]+)(ms|s|m|h|d|mo|y)$/.exec(this.timeString);\r\n    }\r\n\r\n    /**\r\n     * @returns {TimeSuffixType}\r\n     */\r\n    get suffix() {\r\n        return TimeSuffixType.fromShort(this.getMatch()[2]);\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get amount() {\r\n        return parseInt(this.getMatch()[1]);\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    getTimeFromNow() {\r\n        switch (this.suffix) {\r\n            case TimeSuffixType.Millisecond: {\r\n                return Utils.timeFromNow(this.amount);\r\n            }\r\n\r\n            case TimeSuffixType.Second: {\r\n                return Utils.timeFromNow(0, this.amount);\r\n            }\r\n\r\n            case TimeSuffixType.Minute: {\r\n                return Utils.timeFromNow(0, 0, this.amount);\r\n            }\r\n\r\n            case TimeSuffixType.Hour: {\r\n                return Utils.timeFromNow(0, 0, 0, this.amount);\r\n            }\r\n\r\n            case TimeSuffixType.Day: {\r\n                return Utils.timeFromNow(0, 0, 0, 0, this.amount);\r\n            }\r\n\r\n            case TimeSuffixType.Month: {\r\n                return Utils.timeFromNow(0, 0, 0, 0, 0, this.amount);\r\n            }\r\n\r\n            case TimeSuffixType.Year: {\r\n                return Utils.timeFromNow(0, 0, 0, 0, 0, 0, this.amount);\r\n            }\r\n\r\n            default: {\r\n                throw new Error(`[TimeParser.getTimeFromNow] Invalid suffix: ${this.suffix}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/time/time-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 440,
    "kind": "class",
    "name": "TimeParser",
    "memberof": "src/time/time-parser.js",
    "static": true,
    "longname": "src/time/time-parser.js~TimeParser",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/time/time-parser.js",
    "importStyle": "TimeParser",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 441,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/time/time-parser.js~TimeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/time/time-parser.js~TimeParser#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "timeString",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 442,
    "kind": "member",
    "name": "timeString",
    "memberof": "src/time/time-parser.js~TimeParser",
    "static": false,
    "longname": "src/time/time-parser.js~TimeParser#timeString",
    "access": "private",
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 443,
    "kind": "method",
    "name": "getMatch",
    "memberof": "src/time/time-parser.js~TimeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/time/time-parser.js~TimeParser#getMatch",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 444,
    "kind": "get",
    "name": "suffix",
    "memberof": "src/time/time-parser.js~TimeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/time/time-parser.js~TimeParser#suffix",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TimeSuffixType}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TimeSuffixType"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "get",
    "name": "amount",
    "memberof": "src/time/time-parser.js~TimeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/time/time-parser.js~TimeParser#amount",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "method",
    "name": "getTimeFromNow",
    "memberof": "src/time/time-parser.js~TimeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/time/time-parser.js~TimeParser#getTimeFromNow",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "src/time/time-suffix-type.js",
    "content": "/**\r\n * @enum {Number}\r\n * @readonly\r\n */\r\nconst TimeSuffixType = {\r\n    Millisecond: 0,\r\n    Second: 1,\r\n    Minute: 2,\r\n    Hour: 3,\r\n    Day: 4,\r\n    Month: 5,\r\n    Year: 6,\r\n\r\n    /**\r\n     * @param {String} short The short suffix\r\n     * @returns {TimeSuffixType}\r\n     */\r\n    fromShort(short) {\r\n        switch (short) {\r\n            case \"ms\": {\r\n                return this.Millisecond;\r\n            }\r\n\r\n            case \"s\": {\r\n                return this.Second;\r\n            }\r\n\r\n            case \"m\": {\r\n                return this.Minute;\r\n            }\r\n\r\n            case \"h\": {\r\n                return this.Hour;\r\n            }\r\n\r\n            case \"d\": {\r\n                return this.Day;\r\n            }\r\n\r\n            case \"mo\": {\r\n                return this.Month;\r\n            }\r\n\r\n            case \"y\": {\r\n                return this.Year;\r\n            }\r\n\r\n            default: {\r\n                throw new Error(`[TimeSuffixType.fromShort] Invalid time suffix type: ${short}`);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default TimeSuffixType;\r\n",
    "static": true,
    "longname": "D:/Projects/Anvil/src/time/time-suffix-type.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "variable",
    "name": "TimeSuffixType",
    "memberof": "src/time/time-suffix-type.js",
    "static": true,
    "longname": "src/time/time-suffix-type.js~TimeSuffixType",
    "access": "public",
    "export": true,
    "importPath": "discord-anvil/src/time/time-suffix-type.js",
    "importStyle": "TimeSuffixType",
    "description": "",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@enum",
        "tagValue": "{Number}"
      },
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"Millisecond\": *, \"Second\": number, \"Minute\": number, \"Hour\": number, \"Day\": number, \"Month\": number, \"Year\": number, \"fromShort\": function}"
      ]
    }
  },
  {
    "kind": "index",
    "content": "<p align=\"center\">\r\n  <img alt=\"Anvil Logo\" src=\"https://raw.githubusercontent.com/CloudRex/Anvil/master/logo2.png\">\r\n  <br />\r\n  <img alt=\"Build Status\" src=\"https://travis-ci.org/CloudRex/Anvil.svg?branch=master\">\r\n  <img alt=\"NPM Version\" src=\"https://badge.fury.io/js/discord-anvil.svg\">\r\n  <img alt=\"Documentation\" src=\"https://cloudrex.github.io/Anvil/badge.svg\">\r\n</p>\r\n\r\n<br/>\r\n\r\nAnvil is a powerful, fully-modular and self-contained bot development framework.\r\n\r\n**Note**: Anvil is a Discord client wrapper and not a Discord API library.\r\n\r\n=> [Click here to view the NPM package](https://www.npmjs.com/package/discord-anvil)\r\n\r\n=> [Click here to view the docs](https://cloudrex.github.io/Anvil/)\r\n\r\n*Powering the [Tux](https://github.com/CloudRex/Tux) and [War](https://github.com/CloudRex/War) bots | Powered by [Discord.js](https://discord.js.org/)*\r\n\r\n#### Quick Start\r\n\r\nFirst, make sure to install Anvil: `npm install discord-anvil --save`\r\n\r\nindex.js:\r\n```js\r\nconst { Bot, ObjectStore, JsonAuthStore } = require(\"discord-anvil\");\r\nconst path = require(\"path\");\r\n\r\n// Create the bot\r\nconst bot = new Bot({\r\n    paths: {\r\n    \t// The file containing our bot token and prefix\r\n    \tsettings: \"settings.json\",\r\n    \t\r\n    \tauthLevels: \"auth-levels.json\",\r\n    \t\r\n    \t// The directory containing our command files\r\n    \tcommands: path.join(__dirname, \"commands\")\r\n    },\r\n    \r\n    /**\r\n     * The auth store file will store our per-guild\r\n     * auth data, it will be automatically created if\r\n     * it doesn't exist.\r\n     */\r\n    authStore: new JsonAuthStore(\"auth-schema.json\", \"auth-store.json\")\r\n});\r\n\r\n// Connect the client\r\nbot.connect();\r\n```\r\n\r\nsettings.json: ([Click here](https://discordapp.com/developers/applications/me) to find your bot's token)\r\n```json\r\n{\r\n    \"general\": {\r\n        \"token\": \"<Your bot's token here>\",\r\n        \"prefix\": \"!\"\r\n    }\r\n}\r\n```\r\n\r\nauth-schema.json:\r\n```json\r\n{\r\n    \"default\": {\r\n        \"rank\": 0\r\n    },\r\n    \r\n\t\"developer\": {\r\n\t    \"rank\": 1,\r\n\t    \"global\": true\r\n\t}\r\n}\r\n```\r\n\r\ncommands/hello.js:\r\n```js\r\nconst { AccessLevelType, CommandCategoryType } = require(\"discord-anvil\");\r\n\r\n// Export the command to be automatically loaded\r\nmodule.exports = {\r\n\t// When the command is executed\r\n\texecuted(context) {\r\n\t\tcontext.ok(\"Hello world!\");\r\n\t},\r\n\t\r\n\t// Information about the command\r\n\tmeta: {\r\n\t\tname: \"hello\", // The name of the command\r\n\t\tdesc: \"Hello world\", // The description of the command\r\n\t\tauthLevel: AccessLevelType.Member, // Who can issue this command\r\n\t\tcategory: CommandCategoryType.Utility, // The category of the command\r\n\t}\r\n};\r\n```\r\n\r\n#### Building\r\nTo build the project, use `npm run build` or `yarn build` if using [yarn](https://yarnpkg.com/).\r\n\r\nTo build the docs, use `npm run docs` or `yarn docs`.\r\n\r\nMake sure that you have previously installed the project dependencies (`npm install` or `yarn`).\r\n\r\n\r\n#### Versioning\r\nWhen contributing, please follow the [Semantic Versioning](https://semver.org/) guidelines.\r\n",
    "longname": "D:\\Projects\\Anvil\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n\t\"name\": \"discord-anvil\",\n\t\"version\": \"1.1.19\",\n\t\"description\": \"Powerful Discord bot framework\",\n\t\"main\": \"dist/index.js\",\n\t\"presets\": [\n\t\t\"env\",\n\t\t\"es2015\"\n\t],\n\t\"scripts\": {\n\t\t\"build\": \"babel src --out-dir dist\",\n\t\t\"test\": \"npm run build && mocha dist/test/tests.js\",\n\t\t\"prepublish\": \"npm run build\",\n\t\t\"docs\": \"./node_modules/.bin/esdoc\",\n\t\t\"rdocs\": \"npm run docs && git add docs/* && git commit -m 'Regenerated docs' && git push\"\n\t},\n\t\"author\": \"Phantom <private.phantom@outlook.com>\",\n\t\"contributors\": [\n\t\t\"AL_1 <allen.m.lantz@gmail.com> (https://al1l.com/)\"\n\t],\n\t\"license\": \"MIT\",\n\t\"dependencies\": {\n\t\t\"@raxor1234/typer\": \"^1.0.1\",\n\t\t\"argparse\": \"^1.0.10\",\n\t\t\"colors\": \"latest\",\n\t\t\"dblapi.js\": \"^2.0.0\",\n\t\t\"discord.js\": \"^11.2.1\",\n\t\t\"hoek\": \"^4.2.1\",\n\t\t\"javascript-time-ago\": \"^1.0.30\",\n\t\t\"lodash\": \"^4.17.5\",\n\t\t\"minimist\": \"^1.2.0\",\n\t\t\"mongodb\": \"^3.0.7\",\n\t\t\"mysql\": \"^2.15.0\",\n\t\t\"querystring\": \"^0.2.0\",\n\t\t\"request\": \"^2.83.0\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.26.0\",\n\t\t\"babel-preset-env\": \"^1.6.1\",\n\t\t\"babel-preset-es2015\": \"^6.24.1\",\n\t\t\"chai\": \"^4.1.2\",\n\t\t\"esdoc\": \"^1.1.0\",\n\t\t\"esdoc-standard-plugin\": \"^1.0.0\",\n\t\t\"eslint\": \"^4.19.1\",\n\t\t\"eslint-config-airbnb-base\": \"^12.1.0\",\n\t\t\"eslint-plugin-import\": \"^2.10.0\",\n\t\t\"mocha\": \"^5.1.1\"\n\t}\n}\n",
    "longname": "D:\\Projects\\Anvil\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]